// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "toGray.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<8> toGray::ap_const_lv8_0 = "00000000";
const sc_lv<1> toGray::ap_const_lv1_0 = "0";
const bool toGray::ap_true = true;
const sc_logic toGray::ap_const_logic_0 = sc_dt::Log_0;
const sc_logic toGray::ap_const_logic_1 = sc_dt::Log_1;

toGray::toGray(sc_module_name name) : sc_module(name), mVcdFile(0) {
    toGray_Block_proc_U0 = new toGray_Block_proc("toGray_Block_proc_U0");
    toGray_Block_proc_U0->ap_clk(ap_clk);
    toGray_Block_proc_U0->ap_rst(ap_rst_n_inv);
    toGray_Block_proc_U0->ap_start(toGray_Block_proc_U0_ap_start);
    toGray_Block_proc_U0->ap_done(toGray_Block_proc_U0_ap_done);
    toGray_Block_proc_U0->ap_continue(toGray_Block_proc_U0_ap_continue);
    toGray_Block_proc_U0->ap_idle(toGray_Block_proc_U0_ap_idle);
    toGray_Block_proc_U0->ap_ready(toGray_Block_proc_U0_ap_ready);
    toGray_Block_proc_U0->rows(toGray_Block_proc_U0_rows);
    toGray_Block_proc_U0->cols(toGray_Block_proc_U0_cols);
    toGray_Block_proc_U0->ap_return_0(toGray_Block_proc_U0_ap_return_0);
    toGray_Block_proc_U0->ap_return_1(toGray_Block_proc_U0_ap_return_1);
    toGray_Block_proc_U0->ap_return_2(toGray_Block_proc_U0_ap_return_2);
    toGray_Block_proc_U0->ap_return_3(toGray_Block_proc_U0_ap_return_3);
    toGray_Block_proc_U0->ap_return_4(toGray_Block_proc_U0_ap_return_4);
    toGray_Block_proc_U0->ap_return_5(toGray_Block_proc_U0_ap_return_5);
    toGray_Block_proc_U0->ap_return_6(toGray_Block_proc_U0_ap_return_6);
    toGray_Block_proc_U0->ap_return_7(toGray_Block_proc_U0_ap_return_7);
    toGray_AXIvideo2Mat_U0 = new toGray_AXIvideo2Mat("toGray_AXIvideo2Mat_U0");
    toGray_AXIvideo2Mat_U0->ap_clk(ap_clk);
    toGray_AXIvideo2Mat_U0->ap_rst(ap_rst_n_inv);
    toGray_AXIvideo2Mat_U0->ap_start(toGray_AXIvideo2Mat_U0_ap_start);
    toGray_AXIvideo2Mat_U0->ap_done(toGray_AXIvideo2Mat_U0_ap_done);
    toGray_AXIvideo2Mat_U0->ap_continue(toGray_AXIvideo2Mat_U0_ap_continue);
    toGray_AXIvideo2Mat_U0->ap_idle(toGray_AXIvideo2Mat_U0_ap_idle);
    toGray_AXIvideo2Mat_U0->ap_ready(toGray_AXIvideo2Mat_U0_ap_ready);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TDATA(toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TVALID(toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TREADY(toGray_AXIvideo2Mat_U0_IN_STREAM_TREADY);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TKEEP(toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TSTRB(toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TUSER(toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TLAST(toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TID(toGray_AXIvideo2Mat_U0_IN_STREAM_TID);
    toGray_AXIvideo2Mat_U0->IN_STREAM_TDEST(toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST);
    toGray_AXIvideo2Mat_U0->img_rows_V_read(toGray_AXIvideo2Mat_U0_img_rows_V_read);
    toGray_AXIvideo2Mat_U0->img_cols_V_read(toGray_AXIvideo2Mat_U0_img_cols_V_read);
    toGray_AXIvideo2Mat_U0->img_data_stream_0_V_din(toGray_AXIvideo2Mat_U0_img_data_stream_0_V_din);
    toGray_AXIvideo2Mat_U0->img_data_stream_0_V_full_n(toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n);
    toGray_AXIvideo2Mat_U0->img_data_stream_0_V_write(toGray_AXIvideo2Mat_U0_img_data_stream_0_V_write);
    toGray_AXIvideo2Mat_U0->img_data_stream_1_V_din(toGray_AXIvideo2Mat_U0_img_data_stream_1_V_din);
    toGray_AXIvideo2Mat_U0->img_data_stream_1_V_full_n(toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n);
    toGray_AXIvideo2Mat_U0->img_data_stream_1_V_write(toGray_AXIvideo2Mat_U0_img_data_stream_1_V_write);
    toGray_AXIvideo2Mat_U0->img_data_stream_2_V_din(toGray_AXIvideo2Mat_U0_img_data_stream_2_V_din);
    toGray_AXIvideo2Mat_U0->img_data_stream_2_V_full_n(toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n);
    toGray_AXIvideo2Mat_U0->img_data_stream_2_V_write(toGray_AXIvideo2Mat_U0_img_data_stream_2_V_write);
    toGray_CvtColor_U0 = new toGray_CvtColor("toGray_CvtColor_U0");
    toGray_CvtColor_U0->ap_clk(ap_clk);
    toGray_CvtColor_U0->ap_rst(ap_rst_n_inv);
    toGray_CvtColor_U0->ap_start(toGray_CvtColor_U0_ap_start);
    toGray_CvtColor_U0->ap_done(toGray_CvtColor_U0_ap_done);
    toGray_CvtColor_U0->ap_continue(toGray_CvtColor_U0_ap_continue);
    toGray_CvtColor_U0->ap_idle(toGray_CvtColor_U0_ap_idle);
    toGray_CvtColor_U0->ap_ready(toGray_CvtColor_U0_ap_ready);
    toGray_CvtColor_U0->p_src_rows_V_read(toGray_CvtColor_U0_p_src_rows_V_read);
    toGray_CvtColor_U0->p_src_cols_V_read(toGray_CvtColor_U0_p_src_cols_V_read);
    toGray_CvtColor_U0->p_src_data_stream_0_V_dout(toGray_CvtColor_U0_p_src_data_stream_0_V_dout);
    toGray_CvtColor_U0->p_src_data_stream_0_V_empty_n(toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n);
    toGray_CvtColor_U0->p_src_data_stream_0_V_read(toGray_CvtColor_U0_p_src_data_stream_0_V_read);
    toGray_CvtColor_U0->p_src_data_stream_1_V_dout(toGray_CvtColor_U0_p_src_data_stream_1_V_dout);
    toGray_CvtColor_U0->p_src_data_stream_1_V_empty_n(toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n);
    toGray_CvtColor_U0->p_src_data_stream_1_V_read(toGray_CvtColor_U0_p_src_data_stream_1_V_read);
    toGray_CvtColor_U0->p_src_data_stream_2_V_dout(toGray_CvtColor_U0_p_src_data_stream_2_V_dout);
    toGray_CvtColor_U0->p_src_data_stream_2_V_empty_n(toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n);
    toGray_CvtColor_U0->p_src_data_stream_2_V_read(toGray_CvtColor_U0_p_src_data_stream_2_V_read);
    toGray_CvtColor_U0->p_dst_data_stream_V_din(toGray_CvtColor_U0_p_dst_data_stream_V_din);
    toGray_CvtColor_U0->p_dst_data_stream_V_full_n(toGray_CvtColor_U0_p_dst_data_stream_V_full_n);
    toGray_CvtColor_U0->p_dst_data_stream_V_write(toGray_CvtColor_U0_p_dst_data_stream_V_write);
    toGray_Equalize_U0 = new toGray_Equalize("toGray_Equalize_U0");
    toGray_Equalize_U0->ap_clk(ap_clk);
    toGray_Equalize_U0->ap_rst(ap_rst_n_inv);
    toGray_Equalize_U0->ap_start(toGray_Equalize_U0_ap_start);
    toGray_Equalize_U0->ap_done(toGray_Equalize_U0_ap_done);
    toGray_Equalize_U0->ap_continue(toGray_Equalize_U0_ap_continue);
    toGray_Equalize_U0->ap_idle(toGray_Equalize_U0_ap_idle);
    toGray_Equalize_U0->ap_ready(toGray_Equalize_U0_ap_ready);
    toGray_Equalize_U0->p_src_rows_V_read(toGray_Equalize_U0_p_src_rows_V_read);
    toGray_Equalize_U0->p_src_cols_V_read(toGray_Equalize_U0_p_src_cols_V_read);
    toGray_Equalize_U0->p_src_data_stream_V_dout(toGray_Equalize_U0_p_src_data_stream_V_dout);
    toGray_Equalize_U0->p_src_data_stream_V_empty_n(toGray_Equalize_U0_p_src_data_stream_V_empty_n);
    toGray_Equalize_U0->p_src_data_stream_V_read(toGray_Equalize_U0_p_src_data_stream_V_read);
    toGray_Equalize_U0->p_dst_data_stream_V_din(toGray_Equalize_U0_p_dst_data_stream_V_din);
    toGray_Equalize_U0->p_dst_data_stream_V_full_n(toGray_Equalize_U0_p_dst_data_stream_V_full_n);
    toGray_Equalize_U0->p_dst_data_stream_V_write(toGray_Equalize_U0_p_dst_data_stream_V_write);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0 = new toGray_Mat2AXIvideo_8_1080_1920_0_s("toGray_Mat2AXIvideo_8_1080_1920_0_U0");
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->ap_clk(ap_clk);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->ap_rst(ap_rst_n_inv);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->ap_start(toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->ap_done(toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->ap_continue(toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->ap_idle(toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->ap_ready(toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->img_rows_V_read(toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->img_cols_V_read(toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->img_data_stream_V_dout(toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->img_data_stream_V_empty_n(toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->img_data_stream_V_read(toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TDATA(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TVALID(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TREADY(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TKEEP(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TSTRB(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TUSER(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TLAST(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TID(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID);
    toGray_Mat2AXIvideo_8_1080_1920_0_U0->OUT_STREAM_TDEST(toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST);
    inMat_rows_V_channel_U = new FIFO_toGray_inMat_rows_V_channel("inMat_rows_V_channel_U");
    inMat_rows_V_channel_U->clk(ap_clk);
    inMat_rows_V_channel_U->reset(ap_rst_n_inv);
    inMat_rows_V_channel_U->if_read_ce(inMat_rows_V_channel_U_ap_dummy_ce);
    inMat_rows_V_channel_U->if_write_ce(inMat_rows_V_channel_U_ap_dummy_ce);
    inMat_rows_V_channel_U->if_din(inMat_rows_V_channel_din);
    inMat_rows_V_channel_U->if_full_n(inMat_rows_V_channel_full_n);
    inMat_rows_V_channel_U->if_write(inMat_rows_V_channel_write);
    inMat_rows_V_channel_U->if_dout(inMat_rows_V_channel_dout);
    inMat_rows_V_channel_U->if_empty_n(inMat_rows_V_channel_empty_n);
    inMat_rows_V_channel_U->if_read(inMat_rows_V_channel_read);
    inMat_rows_V_channel1_U = new FIFO_toGray_inMat_rows_V_channel1("inMat_rows_V_channel1_U");
    inMat_rows_V_channel1_U->clk(ap_clk);
    inMat_rows_V_channel1_U->reset(ap_rst_n_inv);
    inMat_rows_V_channel1_U->if_read_ce(inMat_rows_V_channel1_U_ap_dummy_ce);
    inMat_rows_V_channel1_U->if_write_ce(inMat_rows_V_channel1_U_ap_dummy_ce);
    inMat_rows_V_channel1_U->if_din(inMat_rows_V_channel1_din);
    inMat_rows_V_channel1_U->if_full_n(inMat_rows_V_channel1_full_n);
    inMat_rows_V_channel1_U->if_write(inMat_rows_V_channel1_write);
    inMat_rows_V_channel1_U->if_dout(inMat_rows_V_channel1_dout);
    inMat_rows_V_channel1_U->if_empty_n(inMat_rows_V_channel1_empty_n);
    inMat_rows_V_channel1_U->if_read(inMat_rows_V_channel1_read);
    inMat_cols_V_channel_U = new FIFO_toGray_inMat_cols_V_channel("inMat_cols_V_channel_U");
    inMat_cols_V_channel_U->clk(ap_clk);
    inMat_cols_V_channel_U->reset(ap_rst_n_inv);
    inMat_cols_V_channel_U->if_read_ce(inMat_cols_V_channel_U_ap_dummy_ce);
    inMat_cols_V_channel_U->if_write_ce(inMat_cols_V_channel_U_ap_dummy_ce);
    inMat_cols_V_channel_U->if_din(inMat_cols_V_channel_din);
    inMat_cols_V_channel_U->if_full_n(inMat_cols_V_channel_full_n);
    inMat_cols_V_channel_U->if_write(inMat_cols_V_channel_write);
    inMat_cols_V_channel_U->if_dout(inMat_cols_V_channel_dout);
    inMat_cols_V_channel_U->if_empty_n(inMat_cols_V_channel_empty_n);
    inMat_cols_V_channel_U->if_read(inMat_cols_V_channel_read);
    inMat_cols_V_channel1_U = new FIFO_toGray_inMat_cols_V_channel1("inMat_cols_V_channel1_U");
    inMat_cols_V_channel1_U->clk(ap_clk);
    inMat_cols_V_channel1_U->reset(ap_rst_n_inv);
    inMat_cols_V_channel1_U->if_read_ce(inMat_cols_V_channel1_U_ap_dummy_ce);
    inMat_cols_V_channel1_U->if_write_ce(inMat_cols_V_channel1_U_ap_dummy_ce);
    inMat_cols_V_channel1_U->if_din(inMat_cols_V_channel1_din);
    inMat_cols_V_channel1_U->if_full_n(inMat_cols_V_channel1_full_n);
    inMat_cols_V_channel1_U->if_write(inMat_cols_V_channel1_write);
    inMat_cols_V_channel1_U->if_dout(inMat_cols_V_channel1_dout);
    inMat_cols_V_channel1_U->if_empty_n(inMat_cols_V_channel1_empty_n);
    inMat_cols_V_channel1_U->if_read(inMat_cols_V_channel1_read);
    grayMat_rows_V_U = new FIFO_toGray_grayMat_rows_V("grayMat_rows_V_U");
    grayMat_rows_V_U->clk(ap_clk);
    grayMat_rows_V_U->reset(ap_rst_n_inv);
    grayMat_rows_V_U->if_read_ce(grayMat_rows_V_U_ap_dummy_ce);
    grayMat_rows_V_U->if_write_ce(grayMat_rows_V_U_ap_dummy_ce);
    grayMat_rows_V_U->if_din(grayMat_rows_V_din);
    grayMat_rows_V_U->if_full_n(grayMat_rows_V_full_n);
    grayMat_rows_V_U->if_write(grayMat_rows_V_write);
    grayMat_rows_V_U->if_dout(grayMat_rows_V_dout);
    grayMat_rows_V_U->if_empty_n(grayMat_rows_V_empty_n);
    grayMat_rows_V_U->if_read(grayMat_rows_V_read);
    grayMat_cols_V_U = new FIFO_toGray_grayMat_cols_V("grayMat_cols_V_U");
    grayMat_cols_V_U->clk(ap_clk);
    grayMat_cols_V_U->reset(ap_rst_n_inv);
    grayMat_cols_V_U->if_read_ce(grayMat_cols_V_U_ap_dummy_ce);
    grayMat_cols_V_U->if_write_ce(grayMat_cols_V_U_ap_dummy_ce);
    grayMat_cols_V_U->if_din(grayMat_cols_V_din);
    grayMat_cols_V_U->if_full_n(grayMat_cols_V_full_n);
    grayMat_cols_V_U->if_write(grayMat_cols_V_write);
    grayMat_cols_V_U->if_dout(grayMat_cols_V_dout);
    grayMat_cols_V_U->if_empty_n(grayMat_cols_V_empty_n);
    grayMat_cols_V_U->if_read(grayMat_cols_V_read);
    outMat_rows_V_U = new FIFO_toGray_outMat_rows_V("outMat_rows_V_U");
    outMat_rows_V_U->clk(ap_clk);
    outMat_rows_V_U->reset(ap_rst_n_inv);
    outMat_rows_V_U->if_read_ce(outMat_rows_V_U_ap_dummy_ce);
    outMat_rows_V_U->if_write_ce(outMat_rows_V_U_ap_dummy_ce);
    outMat_rows_V_U->if_din(outMat_rows_V_din);
    outMat_rows_V_U->if_full_n(outMat_rows_V_full_n);
    outMat_rows_V_U->if_write(outMat_rows_V_write);
    outMat_rows_V_U->if_dout(outMat_rows_V_dout);
    outMat_rows_V_U->if_empty_n(outMat_rows_V_empty_n);
    outMat_rows_V_U->if_read(outMat_rows_V_read);
    outMat_cols_V_U = new FIFO_toGray_outMat_cols_V("outMat_cols_V_U");
    outMat_cols_V_U->clk(ap_clk);
    outMat_cols_V_U->reset(ap_rst_n_inv);
    outMat_cols_V_U->if_read_ce(outMat_cols_V_U_ap_dummy_ce);
    outMat_cols_V_U->if_write_ce(outMat_cols_V_U_ap_dummy_ce);
    outMat_cols_V_U->if_din(outMat_cols_V_din);
    outMat_cols_V_U->if_full_n(outMat_cols_V_full_n);
    outMat_cols_V_U->if_write(outMat_cols_V_write);
    outMat_cols_V_U->if_dout(outMat_cols_V_dout);
    outMat_cols_V_U->if_empty_n(outMat_cols_V_empty_n);
    outMat_cols_V_U->if_read(outMat_cols_V_read);
    inMat_data_stream_0_V_U = new FIFO_toGray_inMat_data_stream_0_V("inMat_data_stream_0_V_U");
    inMat_data_stream_0_V_U->clk(ap_clk);
    inMat_data_stream_0_V_U->reset(ap_rst_n_inv);
    inMat_data_stream_0_V_U->if_read_ce(inMat_data_stream_0_V_U_ap_dummy_ce);
    inMat_data_stream_0_V_U->if_write_ce(inMat_data_stream_0_V_U_ap_dummy_ce);
    inMat_data_stream_0_V_U->if_din(inMat_data_stream_0_V_din);
    inMat_data_stream_0_V_U->if_full_n(inMat_data_stream_0_V_full_n);
    inMat_data_stream_0_V_U->if_write(inMat_data_stream_0_V_write);
    inMat_data_stream_0_V_U->if_dout(inMat_data_stream_0_V_dout);
    inMat_data_stream_0_V_U->if_empty_n(inMat_data_stream_0_V_empty_n);
    inMat_data_stream_0_V_U->if_read(inMat_data_stream_0_V_read);
    inMat_data_stream_1_V_U = new FIFO_toGray_inMat_data_stream_1_V("inMat_data_stream_1_V_U");
    inMat_data_stream_1_V_U->clk(ap_clk);
    inMat_data_stream_1_V_U->reset(ap_rst_n_inv);
    inMat_data_stream_1_V_U->if_read_ce(inMat_data_stream_1_V_U_ap_dummy_ce);
    inMat_data_stream_1_V_U->if_write_ce(inMat_data_stream_1_V_U_ap_dummy_ce);
    inMat_data_stream_1_V_U->if_din(inMat_data_stream_1_V_din);
    inMat_data_stream_1_V_U->if_full_n(inMat_data_stream_1_V_full_n);
    inMat_data_stream_1_V_U->if_write(inMat_data_stream_1_V_write);
    inMat_data_stream_1_V_U->if_dout(inMat_data_stream_1_V_dout);
    inMat_data_stream_1_V_U->if_empty_n(inMat_data_stream_1_V_empty_n);
    inMat_data_stream_1_V_U->if_read(inMat_data_stream_1_V_read);
    inMat_data_stream_2_V_U = new FIFO_toGray_inMat_data_stream_2_V("inMat_data_stream_2_V_U");
    inMat_data_stream_2_V_U->clk(ap_clk);
    inMat_data_stream_2_V_U->reset(ap_rst_n_inv);
    inMat_data_stream_2_V_U->if_read_ce(inMat_data_stream_2_V_U_ap_dummy_ce);
    inMat_data_stream_2_V_U->if_write_ce(inMat_data_stream_2_V_U_ap_dummy_ce);
    inMat_data_stream_2_V_U->if_din(inMat_data_stream_2_V_din);
    inMat_data_stream_2_V_U->if_full_n(inMat_data_stream_2_V_full_n);
    inMat_data_stream_2_V_U->if_write(inMat_data_stream_2_V_write);
    inMat_data_stream_2_V_U->if_dout(inMat_data_stream_2_V_dout);
    inMat_data_stream_2_V_U->if_empty_n(inMat_data_stream_2_V_empty_n);
    inMat_data_stream_2_V_U->if_read(inMat_data_stream_2_V_read);
    grayMat_data_stream_0_V_U = new FIFO_toGray_grayMat_data_stream_0_V("grayMat_data_stream_0_V_U");
    grayMat_data_stream_0_V_U->clk(ap_clk);
    grayMat_data_stream_0_V_U->reset(ap_rst_n_inv);
    grayMat_data_stream_0_V_U->if_read_ce(grayMat_data_stream_0_V_U_ap_dummy_ce);
    grayMat_data_stream_0_V_U->if_write_ce(grayMat_data_stream_0_V_U_ap_dummy_ce);
    grayMat_data_stream_0_V_U->if_din(grayMat_data_stream_0_V_din);
    grayMat_data_stream_0_V_U->if_full_n(grayMat_data_stream_0_V_full_n);
    grayMat_data_stream_0_V_U->if_write(grayMat_data_stream_0_V_write);
    grayMat_data_stream_0_V_U->if_dout(grayMat_data_stream_0_V_dout);
    grayMat_data_stream_0_V_U->if_empty_n(grayMat_data_stream_0_V_empty_n);
    grayMat_data_stream_0_V_U->if_read(grayMat_data_stream_0_V_read);
    outMat_data_stream_0_V_U = new FIFO_toGray_outMat_data_stream_0_V("outMat_data_stream_0_V_U");
    outMat_data_stream_0_V_U->clk(ap_clk);
    outMat_data_stream_0_V_U->reset(ap_rst_n_inv);
    outMat_data_stream_0_V_U->if_read_ce(outMat_data_stream_0_V_U_ap_dummy_ce);
    outMat_data_stream_0_V_U->if_write_ce(outMat_data_stream_0_V_U_ap_dummy_ce);
    outMat_data_stream_0_V_U->if_din(outMat_data_stream_0_V_din);
    outMat_data_stream_0_V_U->if_full_n(outMat_data_stream_0_V_full_n);
    outMat_data_stream_0_V_U->if_write(outMat_data_stream_0_V_write);
    outMat_data_stream_0_V_U->if_dout(outMat_data_stream_0_V_dout);
    outMat_data_stream_0_V_U->if_empty_n(outMat_data_stream_0_V_empty_n);
    outMat_data_stream_0_V_U->if_read(outMat_data_stream_0_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_IN_STREAM_TREADY);
    sensitive << ( toGray_AXIvideo2Mat_U0_IN_STREAM_TREADY );

    SC_METHOD(thread_OUT_STREAM_TDATA);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA );

    SC_METHOD(thread_OUT_STREAM_TDEST);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST );

    SC_METHOD(thread_OUT_STREAM_TID);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID );

    SC_METHOD(thread_OUT_STREAM_TKEEP);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP );

    SC_METHOD(thread_OUT_STREAM_TLAST);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST );

    SC_METHOD(thread_OUT_STREAM_TSTRB);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB );

    SC_METHOD(thread_OUT_STREAM_TUSER);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER );

    SC_METHOD(thread_OUT_STREAM_TVALID);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID );

    SC_METHOD(thread_ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V);
    sensitive << ( toGray_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_grayMat_cols_V_full_n );

    SC_METHOD(thread_ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V);
    sensitive << ( toGray_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_grayMat_rows_V_full_n );

    SC_METHOD(thread_ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel);
    sensitive << ( toGray_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_inMat_cols_V_channel_full_n );

    SC_METHOD(thread_ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1);
    sensitive << ( toGray_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_inMat_cols_V_channel1_full_n );

    SC_METHOD(thread_ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel);
    sensitive << ( toGray_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_inMat_rows_V_channel_full_n );

    SC_METHOD(thread_ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1);
    sensitive << ( toGray_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_inMat_rows_V_channel1_full_n );

    SC_METHOD(thread_ap_chn_write_toGray_Block_proc_U0_outMat_cols_V);
    sensitive << ( toGray_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_outMat_cols_V_full_n );

    SC_METHOD(thread_ap_chn_write_toGray_Block_proc_U0_outMat_rows_V);
    sensitive << ( toGray_Block_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_outMat_rows_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_hs_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( toGray_Block_proc_U0_ap_idle );
    sensitive << ( toGray_AXIvideo2Mat_U0_ap_idle );
    sensitive << ( toGray_CvtColor_U0_ap_idle );
    sensitive << ( toGray_Equalize_U0_ap_idle );
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle );
    sensitive << ( inMat_rows_V_channel_empty_n );
    sensitive << ( inMat_rows_V_channel1_empty_n );
    sensitive << ( inMat_cols_V_channel_empty_n );
    sensitive << ( inMat_cols_V_channel1_empty_n );
    sensitive << ( grayMat_rows_V_empty_n );
    sensitive << ( grayMat_cols_V_empty_n );
    sensitive << ( outMat_rows_V_empty_n );
    sensitive << ( outMat_cols_V_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_top_allready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_hs_continue);

    SC_METHOD(thread_ap_sig_hs_done);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done );

    SC_METHOD(thread_ap_sig_ready_grayMat_cols_V_full_n);
    sensitive << ( grayMat_cols_V_full_n );
    sensitive << ( ap_reg_ready_grayMat_cols_V_full_n );

    SC_METHOD(thread_ap_sig_ready_grayMat_rows_V_full_n);
    sensitive << ( grayMat_rows_V_full_n );
    sensitive << ( ap_reg_ready_grayMat_rows_V_full_n );

    SC_METHOD(thread_ap_sig_ready_inMat_cols_V_channel1_full_n);
    sensitive << ( inMat_cols_V_channel1_full_n );
    sensitive << ( ap_reg_ready_inMat_cols_V_channel1_full_n );

    SC_METHOD(thread_ap_sig_ready_inMat_cols_V_channel_full_n);
    sensitive << ( inMat_cols_V_channel_full_n );
    sensitive << ( ap_reg_ready_inMat_cols_V_channel_full_n );

    SC_METHOD(thread_ap_sig_ready_inMat_rows_V_channel1_full_n);
    sensitive << ( inMat_rows_V_channel1_full_n );
    sensitive << ( ap_reg_ready_inMat_rows_V_channel1_full_n );

    SC_METHOD(thread_ap_sig_ready_inMat_rows_V_channel_full_n);
    sensitive << ( inMat_rows_V_channel_full_n );
    sensitive << ( ap_reg_ready_inMat_rows_V_channel_full_n );

    SC_METHOD(thread_ap_sig_ready_outMat_cols_V_full_n);
    sensitive << ( outMat_cols_V_full_n );
    sensitive << ( ap_reg_ready_outMat_cols_V_full_n );

    SC_METHOD(thread_ap_sig_ready_outMat_rows_V_full_n);
    sensitive << ( outMat_rows_V_full_n );
    sensitive << ( ap_reg_ready_outMat_rows_V_full_n );

    SC_METHOD(thread_ap_sig_top_allready);
    sensitive << ( toGray_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_grayMat_cols_V_U_ap_dummy_ce);

    SC_METHOD(thread_grayMat_cols_V_din);
    sensitive << ( toGray_Block_proc_U0_ap_return_5 );

    SC_METHOD(thread_grayMat_cols_V_read);
    sensitive << ( toGray_Equalize_U0_ap_ready );

    SC_METHOD(thread_grayMat_cols_V_write);
    sensitive << ( ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V );

    SC_METHOD(thread_grayMat_data_stream_0_V_U_ap_dummy_ce);

    SC_METHOD(thread_grayMat_data_stream_0_V_din);
    sensitive << ( toGray_CvtColor_U0_p_dst_data_stream_V_din );

    SC_METHOD(thread_grayMat_data_stream_0_V_read);
    sensitive << ( toGray_Equalize_U0_p_src_data_stream_V_read );

    SC_METHOD(thread_grayMat_data_stream_0_V_write);
    sensitive << ( toGray_CvtColor_U0_p_dst_data_stream_V_write );

    SC_METHOD(thread_grayMat_rows_V_U_ap_dummy_ce);

    SC_METHOD(thread_grayMat_rows_V_din);
    sensitive << ( toGray_Block_proc_U0_ap_return_4 );

    SC_METHOD(thread_grayMat_rows_V_read);
    sensitive << ( toGray_Equalize_U0_ap_ready );

    SC_METHOD(thread_grayMat_rows_V_write);
    sensitive << ( ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V );

    SC_METHOD(thread_inMat_cols_V_channel1_U_ap_dummy_ce);

    SC_METHOD(thread_inMat_cols_V_channel1_din);
    sensitive << ( toGray_Block_proc_U0_ap_return_3 );

    SC_METHOD(thread_inMat_cols_V_channel1_read);
    sensitive << ( toGray_CvtColor_U0_ap_ready );

    SC_METHOD(thread_inMat_cols_V_channel1_write);
    sensitive << ( ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1 );

    SC_METHOD(thread_inMat_cols_V_channel_U_ap_dummy_ce);

    SC_METHOD(thread_inMat_cols_V_channel_din);
    sensitive << ( toGray_Block_proc_U0_ap_return_2 );

    SC_METHOD(thread_inMat_cols_V_channel_read);
    sensitive << ( toGray_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_inMat_cols_V_channel_write);
    sensitive << ( ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel );

    SC_METHOD(thread_inMat_data_stream_0_V_U_ap_dummy_ce);

    SC_METHOD(thread_inMat_data_stream_0_V_din);
    sensitive << ( toGray_AXIvideo2Mat_U0_img_data_stream_0_V_din );

    SC_METHOD(thread_inMat_data_stream_0_V_read);
    sensitive << ( toGray_CvtColor_U0_p_src_data_stream_0_V_read );

    SC_METHOD(thread_inMat_data_stream_0_V_write);
    sensitive << ( toGray_AXIvideo2Mat_U0_img_data_stream_0_V_write );

    SC_METHOD(thread_inMat_data_stream_1_V_U_ap_dummy_ce);

    SC_METHOD(thread_inMat_data_stream_1_V_din);
    sensitive << ( toGray_AXIvideo2Mat_U0_img_data_stream_1_V_din );

    SC_METHOD(thread_inMat_data_stream_1_V_read);
    sensitive << ( toGray_CvtColor_U0_p_src_data_stream_1_V_read );

    SC_METHOD(thread_inMat_data_stream_1_V_write);
    sensitive << ( toGray_AXIvideo2Mat_U0_img_data_stream_1_V_write );

    SC_METHOD(thread_inMat_data_stream_2_V_U_ap_dummy_ce);

    SC_METHOD(thread_inMat_data_stream_2_V_din);
    sensitive << ( toGray_AXIvideo2Mat_U0_img_data_stream_2_V_din );

    SC_METHOD(thread_inMat_data_stream_2_V_read);
    sensitive << ( toGray_CvtColor_U0_p_src_data_stream_2_V_read );

    SC_METHOD(thread_inMat_data_stream_2_V_write);
    sensitive << ( toGray_AXIvideo2Mat_U0_img_data_stream_2_V_write );

    SC_METHOD(thread_inMat_rows_V_channel1_U_ap_dummy_ce);

    SC_METHOD(thread_inMat_rows_V_channel1_din);
    sensitive << ( toGray_Block_proc_U0_ap_return_1 );

    SC_METHOD(thread_inMat_rows_V_channel1_read);
    sensitive << ( toGray_CvtColor_U0_ap_ready );

    SC_METHOD(thread_inMat_rows_V_channel1_write);
    sensitive << ( ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1 );

    SC_METHOD(thread_inMat_rows_V_channel_U_ap_dummy_ce);

    SC_METHOD(thread_inMat_rows_V_channel_din);
    sensitive << ( toGray_Block_proc_U0_ap_return_0 );

    SC_METHOD(thread_inMat_rows_V_channel_read);
    sensitive << ( toGray_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_inMat_rows_V_channel_write);
    sensitive << ( ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel );

    SC_METHOD(thread_outMat_cols_V_U_ap_dummy_ce);

    SC_METHOD(thread_outMat_cols_V_din);
    sensitive << ( toGray_Block_proc_U0_ap_return_7 );

    SC_METHOD(thread_outMat_cols_V_read);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready );

    SC_METHOD(thread_outMat_cols_V_write);
    sensitive << ( ap_chn_write_toGray_Block_proc_U0_outMat_cols_V );

    SC_METHOD(thread_outMat_data_stream_0_V_U_ap_dummy_ce);

    SC_METHOD(thread_outMat_data_stream_0_V_din);
    sensitive << ( toGray_Equalize_U0_p_dst_data_stream_V_din );

    SC_METHOD(thread_outMat_data_stream_0_V_read);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read );

    SC_METHOD(thread_outMat_data_stream_0_V_write);
    sensitive << ( toGray_Equalize_U0_p_dst_data_stream_V_write );

    SC_METHOD(thread_outMat_rows_V_U_ap_dummy_ce);

    SC_METHOD(thread_outMat_rows_V_din);
    sensitive << ( toGray_Block_proc_U0_ap_return_6 );

    SC_METHOD(thread_outMat_rows_V_read);
    sensitive << ( toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready );

    SC_METHOD(thread_outMat_rows_V_write);
    sensitive << ( ap_chn_write_toGray_Block_proc_U0_outMat_rows_V );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA);
    sensitive << ( IN_STREAM_TDATA );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST);
    sensitive << ( IN_STREAM_TDEST );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TID);
    sensitive << ( IN_STREAM_TID );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP);
    sensitive << ( IN_STREAM_TKEEP );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST);
    sensitive << ( IN_STREAM_TLAST );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB);
    sensitive << ( IN_STREAM_TSTRB );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER);
    sensitive << ( IN_STREAM_TUSER );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID);
    sensitive << ( IN_STREAM_TVALID );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( inMat_rows_V_channel_empty_n );
    sensitive << ( inMat_cols_V_channel_empty_n );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_img_cols_V_read);
    sensitive << ( inMat_cols_V_channel_dout );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n);
    sensitive << ( inMat_data_stream_0_V_full_n );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n);
    sensitive << ( inMat_data_stream_1_V_full_n );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n);
    sensitive << ( inMat_data_stream_2_V_full_n );

    SC_METHOD(thread_toGray_AXIvideo2Mat_U0_img_rows_V_read);
    sensitive << ( inMat_rows_V_channel_dout );

    SC_METHOD(thread_toGray_Block_proc_U0_ap_continue);
    sensitive << ( ap_sig_ready_inMat_cols_V_channel_full_n );
    sensitive << ( ap_sig_ready_inMat_rows_V_channel1_full_n );
    sensitive << ( ap_sig_ready_inMat_rows_V_channel_full_n );
    sensitive << ( ap_sig_ready_inMat_cols_V_channel1_full_n );
    sensitive << ( ap_sig_ready_grayMat_rows_V_full_n );
    sensitive << ( ap_sig_ready_grayMat_cols_V_full_n );
    sensitive << ( ap_sig_ready_outMat_rows_V_full_n );
    sensitive << ( ap_sig_ready_outMat_cols_V_full_n );

    SC_METHOD(thread_toGray_Block_proc_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_toGray_Block_proc_U0_cols);
    sensitive << ( cols );

    SC_METHOD(thread_toGray_Block_proc_U0_rows);
    sensitive << ( rows );

    SC_METHOD(thread_toGray_CvtColor_U0_ap_continue);

    SC_METHOD(thread_toGray_CvtColor_U0_ap_start);
    sensitive << ( inMat_rows_V_channel1_empty_n );
    sensitive << ( inMat_cols_V_channel1_empty_n );

    SC_METHOD(thread_toGray_CvtColor_U0_p_dst_data_stream_V_full_n);
    sensitive << ( grayMat_data_stream_0_V_full_n );

    SC_METHOD(thread_toGray_CvtColor_U0_p_src_cols_V_read);
    sensitive << ( inMat_cols_V_channel1_dout );

    SC_METHOD(thread_toGray_CvtColor_U0_p_src_data_stream_0_V_dout);
    sensitive << ( inMat_data_stream_0_V_dout );

    SC_METHOD(thread_toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n);
    sensitive << ( inMat_data_stream_0_V_empty_n );

    SC_METHOD(thread_toGray_CvtColor_U0_p_src_data_stream_1_V_dout);
    sensitive << ( inMat_data_stream_1_V_dout );

    SC_METHOD(thread_toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n);
    sensitive << ( inMat_data_stream_1_V_empty_n );

    SC_METHOD(thread_toGray_CvtColor_U0_p_src_data_stream_2_V_dout);
    sensitive << ( inMat_data_stream_2_V_dout );

    SC_METHOD(thread_toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n);
    sensitive << ( inMat_data_stream_2_V_empty_n );

    SC_METHOD(thread_toGray_CvtColor_U0_p_src_rows_V_read);
    sensitive << ( inMat_rows_V_channel1_dout );

    SC_METHOD(thread_toGray_Equalize_U0_ap_continue);

    SC_METHOD(thread_toGray_Equalize_U0_ap_start);
    sensitive << ( grayMat_rows_V_empty_n );
    sensitive << ( grayMat_cols_V_empty_n );

    SC_METHOD(thread_toGray_Equalize_U0_p_dst_data_stream_V_full_n);
    sensitive << ( outMat_data_stream_0_V_full_n );

    SC_METHOD(thread_toGray_Equalize_U0_p_src_cols_V_read);
    sensitive << ( grayMat_cols_V_dout );

    SC_METHOD(thread_toGray_Equalize_U0_p_src_data_stream_V_dout);
    sensitive << ( grayMat_data_stream_0_V_dout );

    SC_METHOD(thread_toGray_Equalize_U0_p_src_data_stream_V_empty_n);
    sensitive << ( grayMat_data_stream_0_V_empty_n );

    SC_METHOD(thread_toGray_Equalize_U0_p_src_rows_V_read);
    sensitive << ( grayMat_rows_V_dout );

    SC_METHOD(thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY);
    sensitive << ( OUT_STREAM_TREADY );

    SC_METHOD(thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue);
    sensitive << ( ap_sig_hs_continue );

    SC_METHOD(thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start);
    sensitive << ( outMat_rows_V_empty_n );
    sensitive << ( outMat_cols_V_empty_n );

    SC_METHOD(thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read);
    sensitive << ( outMat_cols_V_dout );

    SC_METHOD(thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout);
    sensitive << ( outMat_data_stream_0_V_dout );

    SC_METHOD(thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n);
    sensitive << ( outMat_data_stream_0_V_empty_n );

    SC_METHOD(thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read);
    sensitive << ( outMat_rows_V_dout );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_reg_ready_inMat_cols_V_channel_full_n = SC_LOGIC_0;
    ap_reg_ready_inMat_rows_V_channel1_full_n = SC_LOGIC_0;
    ap_reg_ready_inMat_rows_V_channel_full_n = SC_LOGIC_0;
    ap_reg_ready_inMat_cols_V_channel1_full_n = SC_LOGIC_0;
    ap_reg_ready_grayMat_rows_V_full_n = SC_LOGIC_0;
    ap_reg_ready_grayMat_cols_V_full_n = SC_LOGIC_0;
    ap_reg_ready_outMat_rows_V_full_n = SC_LOGIC_0;
    ap_reg_ready_outMat_cols_V_full_n = SC_LOGIC_0;
    ap_reg_procdone_toGray_Block_proc_U0 = SC_LOGIC_0;
    ap_reg_procdone_toGray_AXIvideo2Mat_U0 = SC_LOGIC_0;
    ap_reg_procdone_toGray_CvtColor_U0 = SC_LOGIC_0;
    ap_reg_procdone_toGray_Equalize_U0 = SC_LOGIC_0;
    ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "toGray_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, IN_STREAM_TDATA, "(port)IN_STREAM_TDATA");
    sc_trace(mVcdFile, IN_STREAM_TKEEP, "(port)IN_STREAM_TKEEP");
    sc_trace(mVcdFile, IN_STREAM_TSTRB, "(port)IN_STREAM_TSTRB");
    sc_trace(mVcdFile, IN_STREAM_TUSER, "(port)IN_STREAM_TUSER");
    sc_trace(mVcdFile, IN_STREAM_TLAST, "(port)IN_STREAM_TLAST");
    sc_trace(mVcdFile, IN_STREAM_TID, "(port)IN_STREAM_TID");
    sc_trace(mVcdFile, IN_STREAM_TDEST, "(port)IN_STREAM_TDEST");
    sc_trace(mVcdFile, OUT_STREAM_TDATA, "(port)OUT_STREAM_TDATA");
    sc_trace(mVcdFile, OUT_STREAM_TKEEP, "(port)OUT_STREAM_TKEEP");
    sc_trace(mVcdFile, OUT_STREAM_TSTRB, "(port)OUT_STREAM_TSTRB");
    sc_trace(mVcdFile, OUT_STREAM_TUSER, "(port)OUT_STREAM_TUSER");
    sc_trace(mVcdFile, OUT_STREAM_TLAST, "(port)OUT_STREAM_TLAST");
    sc_trace(mVcdFile, OUT_STREAM_TID, "(port)OUT_STREAM_TID");
    sc_trace(mVcdFile, OUT_STREAM_TDEST, "(port)OUT_STREAM_TDEST");
    sc_trace(mVcdFile, cols, "(port)cols");
    sc_trace(mVcdFile, rows, "(port)rows");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, IN_STREAM_TVALID, "(port)IN_STREAM_TVALID");
    sc_trace(mVcdFile, IN_STREAM_TREADY, "(port)IN_STREAM_TREADY");
    sc_trace(mVcdFile, OUT_STREAM_TVALID, "(port)OUT_STREAM_TVALID");
    sc_trace(mVcdFile, OUT_STREAM_TREADY, "(port)OUT_STREAM_TREADY");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_start, "toGray_Block_proc_U0_ap_start");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_done, "toGray_Block_proc_U0_ap_done");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_continue, "toGray_Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_idle, "toGray_Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_ready, "toGray_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, toGray_Block_proc_U0_rows, "toGray_Block_proc_U0_rows");
    sc_trace(mVcdFile, toGray_Block_proc_U0_cols, "toGray_Block_proc_U0_cols");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_return_0, "toGray_Block_proc_U0_ap_return_0");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_return_1, "toGray_Block_proc_U0_ap_return_1");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_return_2, "toGray_Block_proc_U0_ap_return_2");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_return_3, "toGray_Block_proc_U0_ap_return_3");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_return_4, "toGray_Block_proc_U0_ap_return_4");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_return_5, "toGray_Block_proc_U0_ap_return_5");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_return_6, "toGray_Block_proc_U0_ap_return_6");
    sc_trace(mVcdFile, toGray_Block_proc_U0_ap_return_7, "toGray_Block_proc_U0_ap_return_7");
    sc_trace(mVcdFile, ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel, "ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel");
    sc_trace(mVcdFile, inMat_cols_V_channel_full_n, "inMat_cols_V_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ready_inMat_cols_V_channel_full_n, "ap_reg_ready_inMat_cols_V_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ready_inMat_cols_V_channel_full_n, "ap_sig_ready_inMat_cols_V_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1, "ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1");
    sc_trace(mVcdFile, inMat_rows_V_channel1_full_n, "inMat_rows_V_channel1_full_n");
    sc_trace(mVcdFile, ap_reg_ready_inMat_rows_V_channel1_full_n, "ap_reg_ready_inMat_rows_V_channel1_full_n");
    sc_trace(mVcdFile, ap_sig_ready_inMat_rows_V_channel1_full_n, "ap_sig_ready_inMat_rows_V_channel1_full_n");
    sc_trace(mVcdFile, ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel, "ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel");
    sc_trace(mVcdFile, inMat_rows_V_channel_full_n, "inMat_rows_V_channel_full_n");
    sc_trace(mVcdFile, ap_reg_ready_inMat_rows_V_channel_full_n, "ap_reg_ready_inMat_rows_V_channel_full_n");
    sc_trace(mVcdFile, ap_sig_ready_inMat_rows_V_channel_full_n, "ap_sig_ready_inMat_rows_V_channel_full_n");
    sc_trace(mVcdFile, ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1, "ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1");
    sc_trace(mVcdFile, inMat_cols_V_channel1_full_n, "inMat_cols_V_channel1_full_n");
    sc_trace(mVcdFile, ap_reg_ready_inMat_cols_V_channel1_full_n, "ap_reg_ready_inMat_cols_V_channel1_full_n");
    sc_trace(mVcdFile, ap_sig_ready_inMat_cols_V_channel1_full_n, "ap_sig_ready_inMat_cols_V_channel1_full_n");
    sc_trace(mVcdFile, ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V, "ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V");
    sc_trace(mVcdFile, grayMat_rows_V_full_n, "grayMat_rows_V_full_n");
    sc_trace(mVcdFile, ap_reg_ready_grayMat_rows_V_full_n, "ap_reg_ready_grayMat_rows_V_full_n");
    sc_trace(mVcdFile, ap_sig_ready_grayMat_rows_V_full_n, "ap_sig_ready_grayMat_rows_V_full_n");
    sc_trace(mVcdFile, ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V, "ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V");
    sc_trace(mVcdFile, grayMat_cols_V_full_n, "grayMat_cols_V_full_n");
    sc_trace(mVcdFile, ap_reg_ready_grayMat_cols_V_full_n, "ap_reg_ready_grayMat_cols_V_full_n");
    sc_trace(mVcdFile, ap_sig_ready_grayMat_cols_V_full_n, "ap_sig_ready_grayMat_cols_V_full_n");
    sc_trace(mVcdFile, ap_chn_write_toGray_Block_proc_U0_outMat_rows_V, "ap_chn_write_toGray_Block_proc_U0_outMat_rows_V");
    sc_trace(mVcdFile, outMat_rows_V_full_n, "outMat_rows_V_full_n");
    sc_trace(mVcdFile, ap_reg_ready_outMat_rows_V_full_n, "ap_reg_ready_outMat_rows_V_full_n");
    sc_trace(mVcdFile, ap_sig_ready_outMat_rows_V_full_n, "ap_sig_ready_outMat_rows_V_full_n");
    sc_trace(mVcdFile, ap_chn_write_toGray_Block_proc_U0_outMat_cols_V, "ap_chn_write_toGray_Block_proc_U0_outMat_cols_V");
    sc_trace(mVcdFile, outMat_cols_V_full_n, "outMat_cols_V_full_n");
    sc_trace(mVcdFile, ap_reg_ready_outMat_cols_V_full_n, "ap_reg_ready_outMat_cols_V_full_n");
    sc_trace(mVcdFile, ap_sig_ready_outMat_cols_V_full_n, "ap_sig_ready_outMat_cols_V_full_n");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_ap_start, "toGray_AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_ap_done, "toGray_AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_ap_continue, "toGray_AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_ap_idle, "toGray_AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_ap_ready, "toGray_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA, "toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID, "toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TREADY, "toGray_AXIvideo2Mat_U0_IN_STREAM_TREADY");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP, "toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB, "toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER, "toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST, "toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TID, "toGray_AXIvideo2Mat_U0_IN_STREAM_TID");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST, "toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_rows_V_read, "toGray_AXIvideo2Mat_U0_img_rows_V_read");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_cols_V_read, "toGray_AXIvideo2Mat_U0_img_cols_V_read");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_0_V_din, "toGray_AXIvideo2Mat_U0_img_data_stream_0_V_din");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n, "toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_0_V_write, "toGray_AXIvideo2Mat_U0_img_data_stream_0_V_write");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_1_V_din, "toGray_AXIvideo2Mat_U0_img_data_stream_1_V_din");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n, "toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_1_V_write, "toGray_AXIvideo2Mat_U0_img_data_stream_1_V_write");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_2_V_din, "toGray_AXIvideo2Mat_U0_img_data_stream_2_V_din");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n, "toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n");
    sc_trace(mVcdFile, toGray_AXIvideo2Mat_U0_img_data_stream_2_V_write, "toGray_AXIvideo2Mat_U0_img_data_stream_2_V_write");
    sc_trace(mVcdFile, toGray_CvtColor_U0_ap_start, "toGray_CvtColor_U0_ap_start");
    sc_trace(mVcdFile, toGray_CvtColor_U0_ap_done, "toGray_CvtColor_U0_ap_done");
    sc_trace(mVcdFile, toGray_CvtColor_U0_ap_continue, "toGray_CvtColor_U0_ap_continue");
    sc_trace(mVcdFile, toGray_CvtColor_U0_ap_idle, "toGray_CvtColor_U0_ap_idle");
    sc_trace(mVcdFile, toGray_CvtColor_U0_ap_ready, "toGray_CvtColor_U0_ap_ready");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_rows_V_read, "toGray_CvtColor_U0_p_src_rows_V_read");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_cols_V_read, "toGray_CvtColor_U0_p_src_cols_V_read");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_0_V_dout, "toGray_CvtColor_U0_p_src_data_stream_0_V_dout");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n, "toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_0_V_read, "toGray_CvtColor_U0_p_src_data_stream_0_V_read");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_1_V_dout, "toGray_CvtColor_U0_p_src_data_stream_1_V_dout");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n, "toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_1_V_read, "toGray_CvtColor_U0_p_src_data_stream_1_V_read");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_2_V_dout, "toGray_CvtColor_U0_p_src_data_stream_2_V_dout");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n, "toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_src_data_stream_2_V_read, "toGray_CvtColor_U0_p_src_data_stream_2_V_read");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_dst_data_stream_V_din, "toGray_CvtColor_U0_p_dst_data_stream_V_din");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_dst_data_stream_V_full_n, "toGray_CvtColor_U0_p_dst_data_stream_V_full_n");
    sc_trace(mVcdFile, toGray_CvtColor_U0_p_dst_data_stream_V_write, "toGray_CvtColor_U0_p_dst_data_stream_V_write");
    sc_trace(mVcdFile, toGray_Equalize_U0_ap_start, "toGray_Equalize_U0_ap_start");
    sc_trace(mVcdFile, toGray_Equalize_U0_ap_done, "toGray_Equalize_U0_ap_done");
    sc_trace(mVcdFile, toGray_Equalize_U0_ap_continue, "toGray_Equalize_U0_ap_continue");
    sc_trace(mVcdFile, toGray_Equalize_U0_ap_idle, "toGray_Equalize_U0_ap_idle");
    sc_trace(mVcdFile, toGray_Equalize_U0_ap_ready, "toGray_Equalize_U0_ap_ready");
    sc_trace(mVcdFile, toGray_Equalize_U0_p_src_rows_V_read, "toGray_Equalize_U0_p_src_rows_V_read");
    sc_trace(mVcdFile, toGray_Equalize_U0_p_src_cols_V_read, "toGray_Equalize_U0_p_src_cols_V_read");
    sc_trace(mVcdFile, toGray_Equalize_U0_p_src_data_stream_V_dout, "toGray_Equalize_U0_p_src_data_stream_V_dout");
    sc_trace(mVcdFile, toGray_Equalize_U0_p_src_data_stream_V_empty_n, "toGray_Equalize_U0_p_src_data_stream_V_empty_n");
    sc_trace(mVcdFile, toGray_Equalize_U0_p_src_data_stream_V_read, "toGray_Equalize_U0_p_src_data_stream_V_read");
    sc_trace(mVcdFile, toGray_Equalize_U0_p_dst_data_stream_V_din, "toGray_Equalize_U0_p_dst_data_stream_V_din");
    sc_trace(mVcdFile, toGray_Equalize_U0_p_dst_data_stream_V_full_n, "toGray_Equalize_U0_p_dst_data_stream_V_full_n");
    sc_trace(mVcdFile, toGray_Equalize_U0_p_dst_data_stream_V_write, "toGray_Equalize_U0_p_dst_data_stream_V_write");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID");
    sc_trace(mVcdFile, toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST, "toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST");
    sc_trace(mVcdFile, ap_sig_hs_continue, "ap_sig_hs_continue");
    sc_trace(mVcdFile, inMat_rows_V_channel_U_ap_dummy_ce, "inMat_rows_V_channel_U_ap_dummy_ce");
    sc_trace(mVcdFile, inMat_rows_V_channel_din, "inMat_rows_V_channel_din");
    sc_trace(mVcdFile, inMat_rows_V_channel_write, "inMat_rows_V_channel_write");
    sc_trace(mVcdFile, inMat_rows_V_channel_dout, "inMat_rows_V_channel_dout");
    sc_trace(mVcdFile, inMat_rows_V_channel_empty_n, "inMat_rows_V_channel_empty_n");
    sc_trace(mVcdFile, inMat_rows_V_channel_read, "inMat_rows_V_channel_read");
    sc_trace(mVcdFile, inMat_rows_V_channel1_U_ap_dummy_ce, "inMat_rows_V_channel1_U_ap_dummy_ce");
    sc_trace(mVcdFile, inMat_rows_V_channel1_din, "inMat_rows_V_channel1_din");
    sc_trace(mVcdFile, inMat_rows_V_channel1_write, "inMat_rows_V_channel1_write");
    sc_trace(mVcdFile, inMat_rows_V_channel1_dout, "inMat_rows_V_channel1_dout");
    sc_trace(mVcdFile, inMat_rows_V_channel1_empty_n, "inMat_rows_V_channel1_empty_n");
    sc_trace(mVcdFile, inMat_rows_V_channel1_read, "inMat_rows_V_channel1_read");
    sc_trace(mVcdFile, inMat_cols_V_channel_U_ap_dummy_ce, "inMat_cols_V_channel_U_ap_dummy_ce");
    sc_trace(mVcdFile, inMat_cols_V_channel_din, "inMat_cols_V_channel_din");
    sc_trace(mVcdFile, inMat_cols_V_channel_write, "inMat_cols_V_channel_write");
    sc_trace(mVcdFile, inMat_cols_V_channel_dout, "inMat_cols_V_channel_dout");
    sc_trace(mVcdFile, inMat_cols_V_channel_empty_n, "inMat_cols_V_channel_empty_n");
    sc_trace(mVcdFile, inMat_cols_V_channel_read, "inMat_cols_V_channel_read");
    sc_trace(mVcdFile, inMat_cols_V_channel1_U_ap_dummy_ce, "inMat_cols_V_channel1_U_ap_dummy_ce");
    sc_trace(mVcdFile, inMat_cols_V_channel1_din, "inMat_cols_V_channel1_din");
    sc_trace(mVcdFile, inMat_cols_V_channel1_write, "inMat_cols_V_channel1_write");
    sc_trace(mVcdFile, inMat_cols_V_channel1_dout, "inMat_cols_V_channel1_dout");
    sc_trace(mVcdFile, inMat_cols_V_channel1_empty_n, "inMat_cols_V_channel1_empty_n");
    sc_trace(mVcdFile, inMat_cols_V_channel1_read, "inMat_cols_V_channel1_read");
    sc_trace(mVcdFile, grayMat_rows_V_U_ap_dummy_ce, "grayMat_rows_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, grayMat_rows_V_din, "grayMat_rows_V_din");
    sc_trace(mVcdFile, grayMat_rows_V_write, "grayMat_rows_V_write");
    sc_trace(mVcdFile, grayMat_rows_V_dout, "grayMat_rows_V_dout");
    sc_trace(mVcdFile, grayMat_rows_V_empty_n, "grayMat_rows_V_empty_n");
    sc_trace(mVcdFile, grayMat_rows_V_read, "grayMat_rows_V_read");
    sc_trace(mVcdFile, grayMat_cols_V_U_ap_dummy_ce, "grayMat_cols_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, grayMat_cols_V_din, "grayMat_cols_V_din");
    sc_trace(mVcdFile, grayMat_cols_V_write, "grayMat_cols_V_write");
    sc_trace(mVcdFile, grayMat_cols_V_dout, "grayMat_cols_V_dout");
    sc_trace(mVcdFile, grayMat_cols_V_empty_n, "grayMat_cols_V_empty_n");
    sc_trace(mVcdFile, grayMat_cols_V_read, "grayMat_cols_V_read");
    sc_trace(mVcdFile, outMat_rows_V_U_ap_dummy_ce, "outMat_rows_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, outMat_rows_V_din, "outMat_rows_V_din");
    sc_trace(mVcdFile, outMat_rows_V_write, "outMat_rows_V_write");
    sc_trace(mVcdFile, outMat_rows_V_dout, "outMat_rows_V_dout");
    sc_trace(mVcdFile, outMat_rows_V_empty_n, "outMat_rows_V_empty_n");
    sc_trace(mVcdFile, outMat_rows_V_read, "outMat_rows_V_read");
    sc_trace(mVcdFile, outMat_cols_V_U_ap_dummy_ce, "outMat_cols_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, outMat_cols_V_din, "outMat_cols_V_din");
    sc_trace(mVcdFile, outMat_cols_V_write, "outMat_cols_V_write");
    sc_trace(mVcdFile, outMat_cols_V_dout, "outMat_cols_V_dout");
    sc_trace(mVcdFile, outMat_cols_V_empty_n, "outMat_cols_V_empty_n");
    sc_trace(mVcdFile, outMat_cols_V_read, "outMat_cols_V_read");
    sc_trace(mVcdFile, inMat_data_stream_0_V_U_ap_dummy_ce, "inMat_data_stream_0_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, inMat_data_stream_0_V_din, "inMat_data_stream_0_V_din");
    sc_trace(mVcdFile, inMat_data_stream_0_V_full_n, "inMat_data_stream_0_V_full_n");
    sc_trace(mVcdFile, inMat_data_stream_0_V_write, "inMat_data_stream_0_V_write");
    sc_trace(mVcdFile, inMat_data_stream_0_V_dout, "inMat_data_stream_0_V_dout");
    sc_trace(mVcdFile, inMat_data_stream_0_V_empty_n, "inMat_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, inMat_data_stream_0_V_read, "inMat_data_stream_0_V_read");
    sc_trace(mVcdFile, inMat_data_stream_1_V_U_ap_dummy_ce, "inMat_data_stream_1_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, inMat_data_stream_1_V_din, "inMat_data_stream_1_V_din");
    sc_trace(mVcdFile, inMat_data_stream_1_V_full_n, "inMat_data_stream_1_V_full_n");
    sc_trace(mVcdFile, inMat_data_stream_1_V_write, "inMat_data_stream_1_V_write");
    sc_trace(mVcdFile, inMat_data_stream_1_V_dout, "inMat_data_stream_1_V_dout");
    sc_trace(mVcdFile, inMat_data_stream_1_V_empty_n, "inMat_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, inMat_data_stream_1_V_read, "inMat_data_stream_1_V_read");
    sc_trace(mVcdFile, inMat_data_stream_2_V_U_ap_dummy_ce, "inMat_data_stream_2_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, inMat_data_stream_2_V_din, "inMat_data_stream_2_V_din");
    sc_trace(mVcdFile, inMat_data_stream_2_V_full_n, "inMat_data_stream_2_V_full_n");
    sc_trace(mVcdFile, inMat_data_stream_2_V_write, "inMat_data_stream_2_V_write");
    sc_trace(mVcdFile, inMat_data_stream_2_V_dout, "inMat_data_stream_2_V_dout");
    sc_trace(mVcdFile, inMat_data_stream_2_V_empty_n, "inMat_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, inMat_data_stream_2_V_read, "inMat_data_stream_2_V_read");
    sc_trace(mVcdFile, grayMat_data_stream_0_V_U_ap_dummy_ce, "grayMat_data_stream_0_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, grayMat_data_stream_0_V_din, "grayMat_data_stream_0_V_din");
    sc_trace(mVcdFile, grayMat_data_stream_0_V_full_n, "grayMat_data_stream_0_V_full_n");
    sc_trace(mVcdFile, grayMat_data_stream_0_V_write, "grayMat_data_stream_0_V_write");
    sc_trace(mVcdFile, grayMat_data_stream_0_V_dout, "grayMat_data_stream_0_V_dout");
    sc_trace(mVcdFile, grayMat_data_stream_0_V_empty_n, "grayMat_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, grayMat_data_stream_0_V_read, "grayMat_data_stream_0_V_read");
    sc_trace(mVcdFile, outMat_data_stream_0_V_U_ap_dummy_ce, "outMat_data_stream_0_V_U_ap_dummy_ce");
    sc_trace(mVcdFile, outMat_data_stream_0_V_din, "outMat_data_stream_0_V_din");
    sc_trace(mVcdFile, outMat_data_stream_0_V_full_n, "outMat_data_stream_0_V_full_n");
    sc_trace(mVcdFile, outMat_data_stream_0_V_write, "outMat_data_stream_0_V_write");
    sc_trace(mVcdFile, outMat_data_stream_0_V_dout, "outMat_data_stream_0_V_dout");
    sc_trace(mVcdFile, outMat_data_stream_0_V_empty_n, "outMat_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, outMat_data_stream_0_V_read, "outMat_data_stream_0_V_read");
    sc_trace(mVcdFile, ap_reg_procdone_toGray_Block_proc_U0, "ap_reg_procdone_toGray_Block_proc_U0");
    sc_trace(mVcdFile, ap_sig_hs_done, "ap_sig_hs_done");
    sc_trace(mVcdFile, ap_reg_procdone_toGray_AXIvideo2Mat_U0, "ap_reg_procdone_toGray_AXIvideo2Mat_U0");
    sc_trace(mVcdFile, ap_reg_procdone_toGray_CvtColor_U0, "ap_reg_procdone_toGray_CvtColor_U0");
    sc_trace(mVcdFile, ap_reg_procdone_toGray_Equalize_U0, "ap_reg_procdone_toGray_Equalize_U0");
    sc_trace(mVcdFile, ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0, "ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0");
    sc_trace(mVcdFile, ap_CS, "ap_CS");
    sc_trace(mVcdFile, ap_sig_top_allready, "ap_sig_top_allready");
#endif

    }
    mHdltvinHandle.open("toGray.hdltvin.dat");
    mHdltvoutHandle.open("toGray.hdltvout.dat");
}

toGray::~toGray() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete toGray_Block_proc_U0;
    delete toGray_AXIvideo2Mat_U0;
    delete toGray_CvtColor_U0;
    delete toGray_Equalize_U0;
    delete toGray_Mat2AXIvideo_8_1080_1920_0_U0;
    delete inMat_rows_V_channel_U;
    delete inMat_rows_V_channel1_U;
    delete inMat_cols_V_channel_U;
    delete inMat_cols_V_channel1_U;
    delete grayMat_rows_V_U;
    delete grayMat_cols_V_U;
    delete outMat_rows_V_U;
    delete outMat_cols_V_U;
    delete inMat_data_stream_0_V_U;
    delete inMat_data_stream_1_V_U;
    delete inMat_data_stream_2_V_U;
    delete grayMat_data_stream_0_V_U;
    delete outMat_data_stream_0_V_U;
}

void toGray::thread_ap_clk_no_reset_() {
    ap_CS = ap_const_logic_0;
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_toGray_AXIvideo2Mat_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_toGray_AXIvideo2Mat_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, toGray_AXIvideo2Mat_U0_ap_done.read())) {
            ap_reg_procdone_toGray_AXIvideo2Mat_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_toGray_Block_proc_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_toGray_Block_proc_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1)) {
            ap_reg_procdone_toGray_Block_proc_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_toGray_CvtColor_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_toGray_CvtColor_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, toGray_CvtColor_U0_ap_done.read())) {
            ap_reg_procdone_toGray_CvtColor_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_toGray_Equalize_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_toGray_Equalize_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, toGray_Equalize_U0_ap_done.read())) {
            ap_reg_procdone_toGray_Equalize_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done.read())) {
            ap_reg_procdone_toGray_Mat2AXIvideo_8_1080_1920_0_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_grayMat_cols_V_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_grayMat_cols_V_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, grayMat_cols_V_full_n.read()))) {
            ap_reg_ready_grayMat_cols_V_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_grayMat_rows_V_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_grayMat_rows_V_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, grayMat_rows_V_full_n.read()))) {
            ap_reg_ready_grayMat_rows_V_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_inMat_cols_V_channel1_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_inMat_cols_V_channel1_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, inMat_cols_V_channel1_full_n.read()))) {
            ap_reg_ready_inMat_cols_V_channel1_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_inMat_cols_V_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_inMat_cols_V_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(inMat_cols_V_channel_full_n.read(), ap_const_logic_1))) {
            ap_reg_ready_inMat_cols_V_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_inMat_rows_V_channel1_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_inMat_rows_V_channel1_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, inMat_rows_V_channel1_full_n.read()))) {
            ap_reg_ready_inMat_rows_V_channel1_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_inMat_rows_V_channel_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_inMat_rows_V_channel_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, inMat_rows_V_channel_full_n.read()))) {
            ap_reg_ready_inMat_rows_V_channel_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_outMat_cols_V_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_outMat_cols_V_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, outMat_cols_V_full_n.read()))) {
            ap_reg_ready_outMat_cols_V_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ready_outMat_rows_V_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_continue.read(), ap_const_logic_1))) {
            ap_reg_ready_outMat_rows_V_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_done.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, outMat_rows_V_full_n.read()))) {
            ap_reg_ready_outMat_rows_V_full_n = ap_const_logic_1;
        }
    }
}

void toGray::thread_IN_STREAM_TREADY() {
    IN_STREAM_TREADY = toGray_AXIvideo2Mat_U0_IN_STREAM_TREADY.read();
}

void toGray::thread_OUT_STREAM_TDATA() {
    OUT_STREAM_TDATA = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA.read();
}

void toGray::thread_OUT_STREAM_TDEST() {
    OUT_STREAM_TDEST = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST.read();
}

void toGray::thread_OUT_STREAM_TID() {
    OUT_STREAM_TID = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID.read();
}

void toGray::thread_OUT_STREAM_TKEEP() {
    OUT_STREAM_TKEEP = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP.read();
}

void toGray::thread_OUT_STREAM_TLAST() {
    OUT_STREAM_TLAST = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST.read();
}

void toGray::thread_OUT_STREAM_TSTRB() {
    OUT_STREAM_TSTRB = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB.read();
}

void toGray::thread_OUT_STREAM_TUSER() {
    OUT_STREAM_TUSER = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER.read();
}

void toGray::thread_OUT_STREAM_TVALID() {
    OUT_STREAM_TVALID = toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID.read();
}

void toGray::thread_ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_grayMat_cols_V_full_n.read())) {
        ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V = ap_const_logic_0;
    } else {
        ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V = toGray_Block_proc_U0_ap_done.read();
    }
}

void toGray::thread_ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_grayMat_rows_V_full_n.read())) {
        ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V = ap_const_logic_0;
    } else {
        ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V = toGray_Block_proc_U0_ap_done.read();
    }
}

void toGray::thread_ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel() {
    if (esl_seteq<1,1,1>(ap_reg_ready_inMat_cols_V_channel_full_n.read(), ap_const_logic_1)) {
        ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel = ap_const_logic_0;
    } else {
        ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel = toGray_Block_proc_U0_ap_done.read();
    }
}

void toGray::thread_ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_inMat_cols_V_channel1_full_n.read())) {
        ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1 = ap_const_logic_0;
    } else {
        ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1 = toGray_Block_proc_U0_ap_done.read();
    }
}

void toGray::thread_ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_inMat_rows_V_channel_full_n.read())) {
        ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel = ap_const_logic_0;
    } else {
        ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel = toGray_Block_proc_U0_ap_done.read();
    }
}

void toGray::thread_ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_inMat_rows_V_channel1_full_n.read())) {
        ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1 = ap_const_logic_0;
    } else {
        ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1 = toGray_Block_proc_U0_ap_done.read();
    }
}

void toGray::thread_ap_chn_write_toGray_Block_proc_U0_outMat_cols_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_outMat_cols_V_full_n.read())) {
        ap_chn_write_toGray_Block_proc_U0_outMat_cols_V = ap_const_logic_0;
    } else {
        ap_chn_write_toGray_Block_proc_U0_outMat_cols_V = toGray_Block_proc_U0_ap_done.read();
    }
}

void toGray::thread_ap_chn_write_toGray_Block_proc_U0_outMat_rows_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_outMat_rows_V_full_n.read())) {
        ap_chn_write_toGray_Block_proc_U0_outMat_rows_V = ap_const_logic_0;
    } else {
        ap_chn_write_toGray_Block_proc_U0_outMat_rows_V = toGray_Block_proc_U0_ap_done.read();
    }
}

void toGray::thread_ap_done() {
    ap_done = ap_sig_hs_done.read();
}

void toGray::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(toGray_Block_proc_U0_ap_idle.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, toGray_AXIvideo2Mat_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, toGray_CvtColor_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, toGray_Equalize_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, inMat_rows_V_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, inMat_rows_V_channel1_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, inMat_cols_V_channel_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, inMat_cols_V_channel1_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, grayMat_rows_V_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, grayMat_cols_V_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, outMat_rows_V_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, outMat_cols_V_empty_n.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void toGray::thread_ap_ready() {
    ap_ready = ap_sig_top_allready.read();
}

void toGray::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void toGray::thread_ap_sig_hs_continue() {
    ap_sig_hs_continue = ap_const_logic_1;
}

void toGray::thread_ap_sig_hs_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_done.read())) {
        ap_sig_hs_done = ap_const_logic_1;
    } else {
        ap_sig_hs_done = ap_const_logic_0;
    }
}

void toGray::thread_ap_sig_ready_grayMat_cols_V_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_grayMat_cols_V_full_n.read())) {
        ap_sig_ready_grayMat_cols_V_full_n = grayMat_cols_V_full_n.read();
    } else {
        ap_sig_ready_grayMat_cols_V_full_n = ap_const_logic_1;
    }
}

void toGray::thread_ap_sig_ready_grayMat_rows_V_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_grayMat_rows_V_full_n.read())) {
        ap_sig_ready_grayMat_rows_V_full_n = grayMat_rows_V_full_n.read();
    } else {
        ap_sig_ready_grayMat_rows_V_full_n = ap_const_logic_1;
    }
}

void toGray::thread_ap_sig_ready_inMat_cols_V_channel1_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_inMat_cols_V_channel1_full_n.read())) {
        ap_sig_ready_inMat_cols_V_channel1_full_n = inMat_cols_V_channel1_full_n.read();
    } else {
        ap_sig_ready_inMat_cols_V_channel1_full_n = ap_const_logic_1;
    }
}

void toGray::thread_ap_sig_ready_inMat_cols_V_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_reg_ready_inMat_cols_V_channel_full_n.read(), ap_const_logic_0)) {
        ap_sig_ready_inMat_cols_V_channel_full_n = inMat_cols_V_channel_full_n.read();
    } else {
        ap_sig_ready_inMat_cols_V_channel_full_n = ap_const_logic_1;
    }
}

void toGray::thread_ap_sig_ready_inMat_rows_V_channel1_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_inMat_rows_V_channel1_full_n.read())) {
        ap_sig_ready_inMat_rows_V_channel1_full_n = inMat_rows_V_channel1_full_n.read();
    } else {
        ap_sig_ready_inMat_rows_V_channel1_full_n = ap_const_logic_1;
    }
}

void toGray::thread_ap_sig_ready_inMat_rows_V_channel_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_inMat_rows_V_channel_full_n.read())) {
        ap_sig_ready_inMat_rows_V_channel_full_n = inMat_rows_V_channel_full_n.read();
    } else {
        ap_sig_ready_inMat_rows_V_channel_full_n = ap_const_logic_1;
    }
}

void toGray::thread_ap_sig_ready_outMat_cols_V_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_outMat_cols_V_full_n.read())) {
        ap_sig_ready_outMat_cols_V_full_n = outMat_cols_V_full_n.read();
    } else {
        ap_sig_ready_outMat_cols_V_full_n = ap_const_logic_1;
    }
}

void toGray::thread_ap_sig_ready_outMat_rows_V_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_outMat_rows_V_full_n.read())) {
        ap_sig_ready_outMat_rows_V_full_n = outMat_rows_V_full_n.read();
    } else {
        ap_sig_ready_outMat_rows_V_full_n = ap_const_logic_1;
    }
}

void toGray::thread_ap_sig_top_allready() {
    ap_sig_top_allready = toGray_AXIvideo2Mat_U0_ap_ready.read();
}

void toGray::thread_grayMat_cols_V_U_ap_dummy_ce() {
    grayMat_cols_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_grayMat_cols_V_din() {
    grayMat_cols_V_din = toGray_Block_proc_U0_ap_return_5.read();
}

void toGray::thread_grayMat_cols_V_read() {
    grayMat_cols_V_read = toGray_Equalize_U0_ap_ready.read();
}

void toGray::thread_grayMat_cols_V_write() {
    grayMat_cols_V_write = ap_chn_write_toGray_Block_proc_U0_grayMat_cols_V.read();
}

void toGray::thread_grayMat_data_stream_0_V_U_ap_dummy_ce() {
    grayMat_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_grayMat_data_stream_0_V_din() {
    grayMat_data_stream_0_V_din = toGray_CvtColor_U0_p_dst_data_stream_V_din.read();
}

void toGray::thread_grayMat_data_stream_0_V_read() {
    grayMat_data_stream_0_V_read = toGray_Equalize_U0_p_src_data_stream_V_read.read();
}

void toGray::thread_grayMat_data_stream_0_V_write() {
    grayMat_data_stream_0_V_write = toGray_CvtColor_U0_p_dst_data_stream_V_write.read();
}

void toGray::thread_grayMat_rows_V_U_ap_dummy_ce() {
    grayMat_rows_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_grayMat_rows_V_din() {
    grayMat_rows_V_din = toGray_Block_proc_U0_ap_return_4.read();
}

void toGray::thread_grayMat_rows_V_read() {
    grayMat_rows_V_read = toGray_Equalize_U0_ap_ready.read();
}

void toGray::thread_grayMat_rows_V_write() {
    grayMat_rows_V_write = ap_chn_write_toGray_Block_proc_U0_grayMat_rows_V.read();
}

void toGray::thread_inMat_cols_V_channel1_U_ap_dummy_ce() {
    inMat_cols_V_channel1_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_inMat_cols_V_channel1_din() {
    inMat_cols_V_channel1_din = toGray_Block_proc_U0_ap_return_3.read();
}

void toGray::thread_inMat_cols_V_channel1_read() {
    inMat_cols_V_channel1_read = toGray_CvtColor_U0_ap_ready.read();
}

void toGray::thread_inMat_cols_V_channel1_write() {
    inMat_cols_V_channel1_write = ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel1.read();
}

void toGray::thread_inMat_cols_V_channel_U_ap_dummy_ce() {
    inMat_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_inMat_cols_V_channel_din() {
    inMat_cols_V_channel_din = toGray_Block_proc_U0_ap_return_2.read();
}

void toGray::thread_inMat_cols_V_channel_read() {
    inMat_cols_V_channel_read = toGray_AXIvideo2Mat_U0_ap_ready.read();
}

void toGray::thread_inMat_cols_V_channel_write() {
    inMat_cols_V_channel_write = ap_chn_write_toGray_Block_proc_U0_inMat_cols_V_channel.read();
}

void toGray::thread_inMat_data_stream_0_V_U_ap_dummy_ce() {
    inMat_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_inMat_data_stream_0_V_din() {
    inMat_data_stream_0_V_din = toGray_AXIvideo2Mat_U0_img_data_stream_0_V_din.read();
}

void toGray::thread_inMat_data_stream_0_V_read() {
    inMat_data_stream_0_V_read = toGray_CvtColor_U0_p_src_data_stream_0_V_read.read();
}

void toGray::thread_inMat_data_stream_0_V_write() {
    inMat_data_stream_0_V_write = toGray_AXIvideo2Mat_U0_img_data_stream_0_V_write.read();
}

void toGray::thread_inMat_data_stream_1_V_U_ap_dummy_ce() {
    inMat_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_inMat_data_stream_1_V_din() {
    inMat_data_stream_1_V_din = toGray_AXIvideo2Mat_U0_img_data_stream_1_V_din.read();
}

void toGray::thread_inMat_data_stream_1_V_read() {
    inMat_data_stream_1_V_read = toGray_CvtColor_U0_p_src_data_stream_1_V_read.read();
}

void toGray::thread_inMat_data_stream_1_V_write() {
    inMat_data_stream_1_V_write = toGray_AXIvideo2Mat_U0_img_data_stream_1_V_write.read();
}

void toGray::thread_inMat_data_stream_2_V_U_ap_dummy_ce() {
    inMat_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_inMat_data_stream_2_V_din() {
    inMat_data_stream_2_V_din = toGray_AXIvideo2Mat_U0_img_data_stream_2_V_din.read();
}

void toGray::thread_inMat_data_stream_2_V_read() {
    inMat_data_stream_2_V_read = toGray_CvtColor_U0_p_src_data_stream_2_V_read.read();
}

void toGray::thread_inMat_data_stream_2_V_write() {
    inMat_data_stream_2_V_write = toGray_AXIvideo2Mat_U0_img_data_stream_2_V_write.read();
}

void toGray::thread_inMat_rows_V_channel1_U_ap_dummy_ce() {
    inMat_rows_V_channel1_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_inMat_rows_V_channel1_din() {
    inMat_rows_V_channel1_din = toGray_Block_proc_U0_ap_return_1.read();
}

void toGray::thread_inMat_rows_V_channel1_read() {
    inMat_rows_V_channel1_read = toGray_CvtColor_U0_ap_ready.read();
}

void toGray::thread_inMat_rows_V_channel1_write() {
    inMat_rows_V_channel1_write = ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel1.read();
}

void toGray::thread_inMat_rows_V_channel_U_ap_dummy_ce() {
    inMat_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_inMat_rows_V_channel_din() {
    inMat_rows_V_channel_din = toGray_Block_proc_U0_ap_return_0.read();
}

void toGray::thread_inMat_rows_V_channel_read() {
    inMat_rows_V_channel_read = toGray_AXIvideo2Mat_U0_ap_ready.read();
}

void toGray::thread_inMat_rows_V_channel_write() {
    inMat_rows_V_channel_write = ap_chn_write_toGray_Block_proc_U0_inMat_rows_V_channel.read();
}

void toGray::thread_outMat_cols_V_U_ap_dummy_ce() {
    outMat_cols_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_outMat_cols_V_din() {
    outMat_cols_V_din = toGray_Block_proc_U0_ap_return_7.read();
}

void toGray::thread_outMat_cols_V_read() {
    outMat_cols_V_read = toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready.read();
}

void toGray::thread_outMat_cols_V_write() {
    outMat_cols_V_write = ap_chn_write_toGray_Block_proc_U0_outMat_cols_V.read();
}

void toGray::thread_outMat_data_stream_0_V_U_ap_dummy_ce() {
    outMat_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_outMat_data_stream_0_V_din() {
    outMat_data_stream_0_V_din = toGray_Equalize_U0_p_dst_data_stream_V_din.read();
}

void toGray::thread_outMat_data_stream_0_V_read() {
    outMat_data_stream_0_V_read = toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read.read();
}

void toGray::thread_outMat_data_stream_0_V_write() {
    outMat_data_stream_0_V_write = toGray_Equalize_U0_p_dst_data_stream_V_write.read();
}

void toGray::thread_outMat_rows_V_U_ap_dummy_ce() {
    outMat_rows_V_U_ap_dummy_ce = ap_const_logic_1;
}

void toGray::thread_outMat_rows_V_din() {
    outMat_rows_V_din = toGray_Block_proc_U0_ap_return_6.read();
}

void toGray::thread_outMat_rows_V_read() {
    outMat_rows_V_read = toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready.read();
}

void toGray::thread_outMat_rows_V_write() {
    outMat_rows_V_write = ap_chn_write_toGray_Block_proc_U0_outMat_rows_V.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA() {
    toGray_AXIvideo2Mat_U0_IN_STREAM_TDATA = IN_STREAM_TDATA.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST() {
    toGray_AXIvideo2Mat_U0_IN_STREAM_TDEST = IN_STREAM_TDEST.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TID() {
    toGray_AXIvideo2Mat_U0_IN_STREAM_TID = IN_STREAM_TID.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP() {
    toGray_AXIvideo2Mat_U0_IN_STREAM_TKEEP = IN_STREAM_TKEEP.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST() {
    toGray_AXIvideo2Mat_U0_IN_STREAM_TLAST = IN_STREAM_TLAST.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB() {
    toGray_AXIvideo2Mat_U0_IN_STREAM_TSTRB = IN_STREAM_TSTRB.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER() {
    toGray_AXIvideo2Mat_U0_IN_STREAM_TUSER = IN_STREAM_TUSER.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID() {
    toGray_AXIvideo2Mat_U0_IN_STREAM_TVALID = IN_STREAM_TVALID.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_ap_continue() {
    toGray_AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void toGray::thread_toGray_AXIvideo2Mat_U0_ap_start() {
    toGray_AXIvideo2Mat_U0_ap_start = (ap_start.read() & inMat_rows_V_channel_empty_n.read() & inMat_cols_V_channel_empty_n.read());
}

void toGray::thread_toGray_AXIvideo2Mat_U0_img_cols_V_read() {
    toGray_AXIvideo2Mat_U0_img_cols_V_read = inMat_cols_V_channel_dout.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n() {
    toGray_AXIvideo2Mat_U0_img_data_stream_0_V_full_n = inMat_data_stream_0_V_full_n.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n() {
    toGray_AXIvideo2Mat_U0_img_data_stream_1_V_full_n = inMat_data_stream_1_V_full_n.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n() {
    toGray_AXIvideo2Mat_U0_img_data_stream_2_V_full_n = inMat_data_stream_2_V_full_n.read();
}

void toGray::thread_toGray_AXIvideo2Mat_U0_img_rows_V_read() {
    toGray_AXIvideo2Mat_U0_img_rows_V_read = inMat_rows_V_channel_dout.read();
}

void toGray::thread_toGray_Block_proc_U0_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_sig_ready_inMat_cols_V_channel_full_n.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_inMat_rows_V_channel1_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_inMat_rows_V_channel_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_inMat_cols_V_channel1_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_grayMat_rows_V_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_grayMat_cols_V_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_outMat_rows_V_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_outMat_cols_V_full_n.read()))) {
        toGray_Block_proc_U0_ap_continue = ap_const_logic_1;
    } else {
        toGray_Block_proc_U0_ap_continue = ap_const_logic_0;
    }
}

void toGray::thread_toGray_Block_proc_U0_ap_start() {
    toGray_Block_proc_U0_ap_start = ap_start.read();
}

void toGray::thread_toGray_Block_proc_U0_cols() {
    toGray_Block_proc_U0_cols = cols.read();
}

void toGray::thread_toGray_Block_proc_U0_rows() {
    toGray_Block_proc_U0_rows = rows.read();
}

void toGray::thread_toGray_CvtColor_U0_ap_continue() {
    toGray_CvtColor_U0_ap_continue = ap_const_logic_1;
}

void toGray::thread_toGray_CvtColor_U0_ap_start() {
    toGray_CvtColor_U0_ap_start = (inMat_rows_V_channel1_empty_n.read() & inMat_cols_V_channel1_empty_n.read());
}

void toGray::thread_toGray_CvtColor_U0_p_dst_data_stream_V_full_n() {
    toGray_CvtColor_U0_p_dst_data_stream_V_full_n = grayMat_data_stream_0_V_full_n.read();
}

void toGray::thread_toGray_CvtColor_U0_p_src_cols_V_read() {
    toGray_CvtColor_U0_p_src_cols_V_read = inMat_cols_V_channel1_dout.read();
}

void toGray::thread_toGray_CvtColor_U0_p_src_data_stream_0_V_dout() {
    toGray_CvtColor_U0_p_src_data_stream_0_V_dout = inMat_data_stream_0_V_dout.read();
}

void toGray::thread_toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n() {
    toGray_CvtColor_U0_p_src_data_stream_0_V_empty_n = inMat_data_stream_0_V_empty_n.read();
}

void toGray::thread_toGray_CvtColor_U0_p_src_data_stream_1_V_dout() {
    toGray_CvtColor_U0_p_src_data_stream_1_V_dout = inMat_data_stream_1_V_dout.read();
}

void toGray::thread_toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n() {
    toGray_CvtColor_U0_p_src_data_stream_1_V_empty_n = inMat_data_stream_1_V_empty_n.read();
}

void toGray::thread_toGray_CvtColor_U0_p_src_data_stream_2_V_dout() {
    toGray_CvtColor_U0_p_src_data_stream_2_V_dout = inMat_data_stream_2_V_dout.read();
}

void toGray::thread_toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n() {
    toGray_CvtColor_U0_p_src_data_stream_2_V_empty_n = inMat_data_stream_2_V_empty_n.read();
}

void toGray::thread_toGray_CvtColor_U0_p_src_rows_V_read() {
    toGray_CvtColor_U0_p_src_rows_V_read = inMat_rows_V_channel1_dout.read();
}

void toGray::thread_toGray_Equalize_U0_ap_continue() {
    toGray_Equalize_U0_ap_continue = ap_const_logic_1;
}

void toGray::thread_toGray_Equalize_U0_ap_start() {
    toGray_Equalize_U0_ap_start = (grayMat_rows_V_empty_n.read() & grayMat_cols_V_empty_n.read());
}

void toGray::thread_toGray_Equalize_U0_p_dst_data_stream_V_full_n() {
    toGray_Equalize_U0_p_dst_data_stream_V_full_n = outMat_data_stream_0_V_full_n.read();
}

void toGray::thread_toGray_Equalize_U0_p_src_cols_V_read() {
    toGray_Equalize_U0_p_src_cols_V_read = grayMat_cols_V_dout.read();
}

void toGray::thread_toGray_Equalize_U0_p_src_data_stream_V_dout() {
    toGray_Equalize_U0_p_src_data_stream_V_dout = grayMat_data_stream_0_V_dout.read();
}

void toGray::thread_toGray_Equalize_U0_p_src_data_stream_V_empty_n() {
    toGray_Equalize_U0_p_src_data_stream_V_empty_n = grayMat_data_stream_0_V_empty_n.read();
}

void toGray::thread_toGray_Equalize_U0_p_src_rows_V_read() {
    toGray_Equalize_U0_p_src_rows_V_read = grayMat_rows_V_dout.read();
}

void toGray::thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY() {
    toGray_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY = OUT_STREAM_TREADY.read();
}

void toGray::thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue() {
    toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue = ap_sig_hs_continue.read();
}

void toGray::thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start() {
    toGray_Mat2AXIvideo_8_1080_1920_0_U0_ap_start = (outMat_rows_V_empty_n.read() & outMat_cols_V_empty_n.read());
}

void toGray::thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read() {
    toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read = outMat_cols_V_dout.read();
}

void toGray::thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout() {
    toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout = outMat_data_stream_0_V_dout.read();
}

void toGray::thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n() {
    toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n = outMat_data_stream_0_V_empty_n.read();
}

void toGray::thread_toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read() {
    toGray_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read = outMat_rows_V_dout.read();
}

void toGray::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"IN_STREAM_TDATA\" :  \"" << IN_STREAM_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_STREAM_TKEEP\" :  \"" << IN_STREAM_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_STREAM_TSTRB\" :  \"" << IN_STREAM_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_STREAM_TUSER\" :  \"" << IN_STREAM_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_STREAM_TLAST\" :  \"" << IN_STREAM_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_STREAM_TID\" :  \"" << IN_STREAM_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_STREAM_TDEST\" :  \"" << IN_STREAM_TDEST.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"OUT_STREAM_TDATA\" :  \"" << OUT_STREAM_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_STREAM_TKEEP\" :  \"" << OUT_STREAM_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_STREAM_TSTRB\" :  \"" << OUT_STREAM_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_STREAM_TUSER\" :  \"" << OUT_STREAM_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_STREAM_TLAST\" :  \"" << OUT_STREAM_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_STREAM_TID\" :  \"" << OUT_STREAM_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_STREAM_TDEST\" :  \"" << OUT_STREAM_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"cols\" :  \"" << cols.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rows\" :  \"" << rows.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_STREAM_TVALID\" :  \"" << IN_STREAM_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"IN_STREAM_TREADY\" :  \"" << IN_STREAM_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUT_STREAM_TVALID\" :  \"" << OUT_STREAM_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"OUT_STREAM_TREADY\" :  \"" << OUT_STREAM_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

