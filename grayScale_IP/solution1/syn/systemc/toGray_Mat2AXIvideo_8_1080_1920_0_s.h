// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _toGray_Mat2AXIvideo_8_1080_1920_0_s_HH_
#define _toGray_Mat2AXIvideo_8_1080_1920_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct toGray_Mat2AXIvideo_8_1080_1920_0_s : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > img_rows_V_read;
    sc_in< sc_lv<12> > img_cols_V_read;
    sc_in< sc_lv<8> > img_data_stream_V_dout;
    sc_in< sc_logic > img_data_stream_V_empty_n;
    sc_out< sc_logic > img_data_stream_V_read;
    sc_out< sc_lv<8> > OUT_STREAM_TDATA;
    sc_out< sc_logic > OUT_STREAM_TVALID;
    sc_in< sc_logic > OUT_STREAM_TREADY;
    sc_out< sc_lv<1> > OUT_STREAM_TKEEP;
    sc_out< sc_lv<1> > OUT_STREAM_TSTRB;
    sc_out< sc_lv<1> > OUT_STREAM_TUSER;
    sc_out< sc_lv<1> > OUT_STREAM_TLAST;
    sc_out< sc_lv<1> > OUT_STREAM_TID;
    sc_out< sc_lv<1> > OUT_STREAM_TDEST;


    // Module declarations
    toGray_Mat2AXIvideo_8_1080_1920_0_s(sc_module_name name);
    SC_HAS_PROCESS(toGray_Mat2AXIvideo_8_1080_1920_0_s);

    ~toGray_Mat2AXIvideo_8_1080_1920_0_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<12> > p_3_reg_141;
    sc_signal< bool > ap_sig_bdd_52;
    sc_signal< sc_lv<13> > op2_assign_fu_157_p2;
    sc_signal< sc_lv<13> > op2_assign_reg_225;
    sc_signal< sc_lv<1> > exitcond3_fu_168_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_66;
    sc_signal< sc_lv<12> > i_V_fu_173_p2;
    sc_signal< sc_lv<12> > i_V_reg_234;
    sc_signal< sc_lv<1> > exitcond_fu_179_p2;
    sc_signal< sc_lv<1> > exitcond_reg_239;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_2;
    sc_signal< bool > ap_sig_bdd_77;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< bool > ap_sig_bdd_85;
    sc_signal< sc_logic > ap_sig_ioackin_OUT_STREAM_TREADY;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<12> > j_V_fu_184_p2;
    sc_signal< sc_lv<1> > axi_last_V_fu_194_p2;
    sc_signal< sc_lv<1> > axi_last_V_reg_248;
    sc_signal< sc_lv<12> > p_s_reg_130;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_3;
    sc_signal< bool > ap_sig_bdd_116;
    sc_signal< sc_lv<1> > tmp_user_V_fu_78;
    sc_signal< sc_logic > ap_reg_ioackin_OUT_STREAM_TREADY;
    sc_signal< sc_lv<13> > tmp_cast_fu_153_p1;
    sc_signal< sc_lv<13> > tmp_cast_36_fu_190_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<4> ap_ST_st5_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<13> ap_const_lv13_1FFF;
    static const sc_lv<12> ap_const_lv12_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_OUT_STREAM_TDATA();
    void thread_OUT_STREAM_TDEST();
    void thread_OUT_STREAM_TID();
    void thread_OUT_STREAM_TKEEP();
    void thread_OUT_STREAM_TLAST();
    void thread_OUT_STREAM_TSTRB();
    void thread_OUT_STREAM_TUSER();
    void thread_OUT_STREAM_TVALID();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_116();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_52();
    void thread_ap_sig_bdd_66();
    void thread_ap_sig_bdd_77();
    void thread_ap_sig_bdd_85();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st5_fsm_3();
    void thread_ap_sig_ioackin_OUT_STREAM_TREADY();
    void thread_axi_last_V_fu_194_p2();
    void thread_exitcond3_fu_168_p2();
    void thread_exitcond_fu_179_p2();
    void thread_i_V_fu_173_p2();
    void thread_img_data_stream_V_read();
    void thread_j_V_fu_184_p2();
    void thread_op2_assign_fu_157_p2();
    void thread_tmp_cast_36_fu_190_p1();
    void thread_tmp_cast_fu_153_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
