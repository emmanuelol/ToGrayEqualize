// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _toGray_AXIvideo2Mat_HH_
#define _toGray_AXIvideo2Mat_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct toGray_AXIvideo2Mat : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > IN_STREAM_TDATA;
    sc_in< sc_logic > IN_STREAM_TVALID;
    sc_out< sc_logic > IN_STREAM_TREADY;
    sc_in< sc_lv<3> > IN_STREAM_TKEEP;
    sc_in< sc_lv<3> > IN_STREAM_TSTRB;
    sc_in< sc_lv<1> > IN_STREAM_TUSER;
    sc_in< sc_lv<1> > IN_STREAM_TLAST;
    sc_in< sc_lv<1> > IN_STREAM_TID;
    sc_in< sc_lv<1> > IN_STREAM_TDEST;
    sc_in< sc_lv<12> > img_rows_V_read;
    sc_in< sc_lv<12> > img_cols_V_read;
    sc_out< sc_lv<8> > img_data_stream_0_V_din;
    sc_in< sc_logic > img_data_stream_0_V_full_n;
    sc_out< sc_logic > img_data_stream_0_V_write;
    sc_out< sc_lv<8> > img_data_stream_1_V_din;
    sc_in< sc_logic > img_data_stream_1_V_full_n;
    sc_out< sc_logic > img_data_stream_1_V_write;
    sc_out< sc_lv<8> > img_data_stream_2_V_din;
    sc_in< sc_logic > img_data_stream_2_V_full_n;
    sc_out< sc_logic > img_data_stream_2_V_write;


    // Module declarations
    toGray_AXIvideo2Mat(sc_module_name name);
    SC_HAS_PROCESS(toGray_AXIvideo2Mat);

    ~toGray_AXIvideo2Mat();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_26;
    sc_signal< sc_lv<1> > eol_1_reg_184;
    sc_signal< sc_lv<24> > axi_data_V_1_reg_195;
    sc_signal< sc_lv<12> > p_1_reg_206;
    sc_signal< sc_lv<1> > eol_reg_217;
    sc_signal< sc_lv<1> > axi_last_V_2_reg_229;
    sc_signal< sc_lv<24> > p_Val2_s_reg_241;
    sc_signal< sc_lv<1> > eol_2_reg_253;
    sc_signal< bool > ap_sig_bdd_75;
    sc_signal< sc_lv<24> > tmp_data_V_reg_402;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_87;
    sc_signal< sc_lv<1> > tmp_last_V_reg_410;
    sc_signal< sc_lv<1> > exitcond1_fu_319_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_101;
    sc_signal< sc_lv<12> > i_V_fu_324_p2;
    sc_signal< sc_lv<12> > i_V_reg_426;
    sc_signal< sc_lv<1> > exitcond2_fu_330_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_431;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_4;
    sc_signal< bool > ap_sig_bdd_112;
    sc_signal< sc_lv<1> > brmerge_fu_344_p2;
    sc_signal< bool > ap_sig_bdd_120;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< bool > ap_sig_bdd_133;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<12> > j_V_fu_335_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_363_p1;
    sc_signal< sc_lv<8> > tmp_1_reg_444;
    sc_signal< sc_lv<8> > tmp_2_reg_449;
    sc_signal< sc_lv<8> > tmp_7_reg_454;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_5;
    sc_signal< bool > ap_sig_bdd_158;
    sc_signal< bool > ap_sig_bdd_163;
    sc_signal< sc_lv<1> > axi_last_V_3_reg_264;
    sc_signal< sc_lv<1> > axi_last_V1_reg_153;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_6;
    sc_signal< bool > ap_sig_bdd_181;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_188;
    sc_signal< sc_lv<24> > axi_data_V_3_reg_276;
    sc_signal< sc_lv<24> > axi_data_V1_reg_163;
    sc_signal< sc_lv<12> > p_s_reg_173;
    sc_signal< sc_lv<1> > eol_1_phi_fu_187_p4;
    sc_signal< sc_lv<24> > axi_data_V_1_phi_fu_198_p4;
    sc_signal< sc_lv<1> > eol_phi_fu_221_p4;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_axi_last_V_2_reg_229pp1_it0;
    sc_signal< sc_lv<24> > ap_reg_phiprechg_p_Val2_s_reg_241pp1_it0;
    sc_signal< sc_lv<24> > p_Val2_s_phi_fu_245_p4;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_eol_2_reg_253pp1_it0;
    sc_signal< sc_lv<1> > axi_last_V_1_mux_fu_356_p2;
    sc_signal< sc_lv<1> > eol_3_reg_288;
    sc_signal< sc_lv<1> > sof_1_fu_98;
    sc_signal< sc_lv<1> > not_sof_2_fu_350_p2;
    sc_signal< sc_lv<1> > tmp_user_V_fu_310_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_119;
    sc_signal< bool > ap_sig_bdd_211;
    sc_signal< bool > ap_sig_bdd_144;
    sc_signal< bool > ap_sig_bdd_229;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_pp1_stg0_fsm_4;
    static const sc_lv<7> ap_ST_st7_fsm_5;
    static const sc_lv<7> ap_ST_st8_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_IN_STREAM_TREADY();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_axi_last_V_2_reg_229pp1_it0();
    void thread_ap_reg_phiprechg_eol_2_reg_253pp1_it0();
    void thread_ap_reg_phiprechg_p_Val2_s_reg_241pp1_it0();
    void thread_ap_sig_bdd_101();
    void thread_ap_sig_bdd_112();
    void thread_ap_sig_bdd_119();
    void thread_ap_sig_bdd_120();
    void thread_ap_sig_bdd_133();
    void thread_ap_sig_bdd_144();
    void thread_ap_sig_bdd_158();
    void thread_ap_sig_bdd_163();
    void thread_ap_sig_bdd_181();
    void thread_ap_sig_bdd_188();
    void thread_ap_sig_bdd_211();
    void thread_ap_sig_bdd_229();
    void thread_ap_sig_bdd_26();
    void thread_ap_sig_bdd_75();
    void thread_ap_sig_bdd_87();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_4();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st7_fsm_5();
    void thread_ap_sig_cseq_ST_st8_fsm_6();
    void thread_axi_data_V_1_phi_fu_198_p4();
    void thread_axi_last_V_1_mux_fu_356_p2();
    void thread_brmerge_fu_344_p2();
    void thread_eol_1_phi_fu_187_p4();
    void thread_eol_phi_fu_221_p4();
    void thread_exitcond1_fu_319_p2();
    void thread_exitcond2_fu_330_p2();
    void thread_i_V_fu_324_p2();
    void thread_img_data_stream_0_V_din();
    void thread_img_data_stream_0_V_write();
    void thread_img_data_stream_1_V_din();
    void thread_img_data_stream_1_V_write();
    void thread_img_data_stream_2_V_din();
    void thread_img_data_stream_2_V_write();
    void thread_j_V_fu_335_p2();
    void thread_not_sof_2_fu_350_p2();
    void thread_p_Val2_s_phi_fu_245_p4();
    void thread_tmp_1_fu_363_p1();
    void thread_tmp_user_V_fu_310_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
