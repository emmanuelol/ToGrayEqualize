-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity toGray_Equalize is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of toGray_Equalize is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000100";
    constant ap_ST_pp0_stg0_fsm_3 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000001000";
    constant ap_ST_st7_fsm_4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000010000";
    constant ap_ST_st8_fsm_5 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_ST_st9_fsm_6 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000001000000";
    constant ap_ST_st10_fsm_7 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000010000000";
    constant ap_ST_st11_fsm_8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000100000000";
    constant ap_ST_st12_fsm_9 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000001000000000";
    constant ap_ST_st13_fsm_10 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000010000000000";
    constant ap_ST_st14_fsm_11 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000100000000000";
    constant ap_ST_st15_fsm_12 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";
    constant ap_ST_st16_fsm_13 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010000000000000";
    constant ap_ST_st17_fsm_14 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100000000000000";
    constant ap_ST_st18_fsm_15 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000001000000000000000";
    constant ap_ST_st19_fsm_16 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_ST_st20_fsm_17 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000100000000000000000";
    constant ap_ST_st21_fsm_18 : STD_LOGIC_VECTOR (28 downto 0) := "00000000001000000000000000000";
    constant ap_ST_st22_fsm_19 : STD_LOGIC_VECTOR (28 downto 0) := "00000000010000000000000000000";
    constant ap_ST_st23_fsm_20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100000000000000000000";
    constant ap_ST_st24_fsm_21 : STD_LOGIC_VECTOR (28 downto 0) := "00000001000000000000000000000";
    constant ap_ST_st25_fsm_22 : STD_LOGIC_VECTOR (28 downto 0) := "00000010000000000000000000000";
    constant ap_ST_st26_fsm_23 : STD_LOGIC_VECTOR (28 downto 0) := "00000100000000000000000000000";
    constant ap_ST_st27_fsm_24 : STD_LOGIC_VECTOR (28 downto 0) := "00001000000000000000000000000";
    constant ap_ST_st28_fsm_25 : STD_LOGIC_VECTOR (28 downto 0) := "00010000000000000000000000000";
    constant ap_ST_st29_fsm_26 : STD_LOGIC_VECTOR (28 downto 0) := "00100000000000000000000000000";
    constant ap_ST_pp1_stg0_fsm_27 : STD_LOGIC_VECTOR (28 downto 0) := "01000000000000000000000000000";
    constant ap_ST_st47_fsm_28 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_437F0000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011011111110000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_48 : BOOLEAN;
    signal hls_lut_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_lut_V_ce0 : STD_LOGIC;
    signal hls_lut_V_we0 : STD_LOGIC;
    signal hls_lut_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_lut_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_270 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_5_reg_290 : STD_LOGIC_VECTOR (20 downto 0);
    signal i3_reg_302 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_bdd_88 : BOOLEAN;
    signal i_2_fu_348_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_100 : BOOLEAN;
    signal cols_cast7_fu_359_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal cols_cast7_reg_1249 : STD_LOGIC_VECTOR (23 downto 0);
    signal exitcond4_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_cast6_fu_362_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal rows_cast6_reg_1254 : STD_LOGIC_VECTOR (23 downto 0);
    signal exitcond5_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_118 : BOOLEAN;
    signal i_4_fu_375_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_4_reg_1263 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_381_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_reg_1268 : STD_LOGIC_VECTOR (23 downto 0);
    signal exitcond6_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_1273 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_134 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_141 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond6_reg_1273_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1282 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_10_reg_1282_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_153 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal j_2_fu_390_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_10_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_1286 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_186 : BOOLEAN;
    signal grp_fu_326_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_195 : BOOLEAN;
    signal ap_sig_cseq_ST_st28_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_204 : BOOLEAN;
    signal grp_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_reg_1317 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st29_fsm_26 : STD_LOGIC;
    signal ap_sig_bdd_213 : BOOLEAN;
    signal exitcond_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1322 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_27 : STD_LOGIC;
    signal ap_sig_bdd_224 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it16 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1322_pp1_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_483_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_1331 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it8 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it9 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it11 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it13 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it14 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_1331_pp1_it15 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_V_fu_494_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sum_V_reg_1341 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_323_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1347 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_reg_1352 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1358 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_33_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_33_reg_1364 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_reg_1370 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_isneg_reg_1370_pp1_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_571_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_reg_1380 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_575_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_reg_1385 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_4_i_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_reg_1390 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_587_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1396 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_fu_593_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_reg_1406 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_i_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_694_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_reg_1424 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_fu_698_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_reg_1429 : STD_LOGIC_VECTOR (7 downto 0);
    signal qb_fu_728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_reg_1434 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_fu_743_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_i_reg_1445 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp2_i_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_reg_1450 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_demorgan_i_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_demorgan_i_reg_1456 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_reg_1462 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1469 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_reg_1481 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_reg_1487 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_reg_1493 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_reg_1498 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_1503 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1514 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_1514_pp1_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_demorgan_i_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_demorgan_i_reg_1519 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_sel_tmp55_demorgan_i_reg_1519_pp1_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_fu_989_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_10_reg_1524 : STD_LOGIC_VECTOR (7 downto 0);
    signal Range1_all_ones_2_i_i_34_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_i_34_reg_1530 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp46_i_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp46_i_reg_1535 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_i_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_i_reg_1540 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_97_demorgan_i_i_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_97_demorgan_i_i_reg_1545 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_V_fu_1202_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_V_reg_1551 : STD_LOGIC_VECTOR (7 downto 0);
    signal hist_out_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hist_out_V_ce0 : STD_LOGIC;
    signal hist_out_V_we0 : STD_LOGIC;
    signal hist_out_V_d0 : STD_LOGIC_VECTOR (20 downto 0);
    signal hist_out_V_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal hist_out_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal hist_out_V_ce1 : STD_LOGIC;
    signal hist_out_V_we1 : STD_LOGIC;
    signal hist_out_V_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal i_reg_247 : STD_LOGIC_VECTOR (8 downto 0);
    signal i2_reg_258 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_433 : BOOLEAN;
    signal grp_fu_335_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2 : STD_LOGIC_VECTOR (20 downto 0);
    signal data_0_V_7_phi_fu_284_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal data_0_V_3_fu_422_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_5_phi_fu_294_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_fu_354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_0_V_4_fu_140 : STD_LOGIC_VECTOR (20 downto 0);
    signal data_0_V_5_fu_144 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_2_fu_436_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s_fu_470_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_sig_cseq_ST_st47_fsm_28 : STD_LOGIC;
    signal ap_sig_bdd_498 : BOOLEAN;
    signal grp_fu_314_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_517 : BOOLEAN;
    signal grp_fu_323_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_326_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_fu_329_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_381_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_381_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_396_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_500_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_503_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_513_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal d_assign_fu_329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_545_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_fu_559_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_2_i_fu_563_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_20_fu_533_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_1_i_fu_555_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_i_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_i_fu_617_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_fu_622_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_fu_607_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_25_fu_647_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal F2_2_cast_i_fu_633_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_fu_663_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_11_i_fu_667_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_24_fu_637_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_cast_i_fu_684_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal F2_2_cast3_i_fu_629_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_13_i_fu_688_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_673_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_fu_677_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_i_fu_711_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_20_cast_i_fu_716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_i_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_766_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos2_fu_775_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_fu_790_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_cast_i_fu_771_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_i_fu_804_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_22_i_fu_808_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lD_fu_814_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_824_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_cast_i_fu_780_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_i_fu_844_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_fu_848_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_fu_854_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_24_i_not_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_i_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_demorgan_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp51_i_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_demorgan_i_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_fu_928_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_fu_931_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_936_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_i_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_i_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_fu_954_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp12_i_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_i_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_i_fu_971_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_not_i_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp28_i_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond91_i_i_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_i_i_fu_1034_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond93_i_i_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_i_fu_1065_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_95_i_i_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_98_i_i_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_i_fu_1079_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_i_i_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_i_fu_1071_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_i_i_fu_1086_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_fu_1018_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_i_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1094_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_i_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1144_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_i_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_97_demorgan_i_not_i_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_i_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp56_i_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_0_i_mux_i_fu_1172_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp52_i_fu_1184_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_314_ce : STD_LOGIC;
    signal grp_fu_318_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st9_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_1039 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_1046 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_1054 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_1062 : BOOLEAN;
    signal grp_fu_323_ce : STD_LOGIC;
    signal grp_fu_326_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_sig_bdd_1298 : BOOLEAN;

    component toGray_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component toGray_fdiv_32ns_32ns_32_16 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component toGray_uitofp_21ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component toGray_sitofp_32ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component toGray_fpext_32ns_64_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component toGray_Equalize_hls_lut_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component toGray_Equalize_hist_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (20 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    hls_lut_V_U : component toGray_Equalize_hls_lut_V
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_lut_V_address0,
        ce0 => hls_lut_V_ce0,
        we0 => hls_lut_V_we0,
        d0 => hls_lut_V_d0,
        q0 => hls_lut_V_q0);

    hist_out_V_U : component toGray_Equalize_hist_out_V
    generic map (
        DataWidth => 21,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hist_out_V_address0,
        ce0 => hist_out_V_ce0,
        we0 => hist_out_V_we0,
        d0 => hist_out_V_d0,
        q0 => hist_out_V_q0,
        address1 => hist_out_V_address1,
        ce1 => hist_out_V_ce1,
        we1 => hist_out_V_we1,
        d1 => hist_out_V_d1);

    toGray_fmul_32ns_32ns_32_4_max_dsp_U20 : component toGray_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_314_p0,
        din1 => grp_fu_314_p1,
        ce => grp_fu_314_ce,
        dout => grp_fu_314_p2);

    toGray_fdiv_32ns_32ns_32_16_U21 : component toGray_fdiv_32ns_32ns_32_16
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_318_p0,
        din1 => grp_fu_318_p1,
        ce => grp_fu_318_ce,
        dout => grp_fu_318_p2);

    toGray_uitofp_21ns_32_6_U22 : component toGray_uitofp_21ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 21,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_323_p0,
        ce => grp_fu_323_ce,
        dout => grp_fu_323_p1);

    toGray_sitofp_32ns_32_6_U23 : component toGray_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_326_p0,
        ce => grp_fu_326_ce,
        dout => grp_fu_326_p1);

    toGray_fpext_32ns_64_1_U24 : component toGray_fpext_32ns_64_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => d_assign_fu_329_p0,
        dout => d_assign_fu_329_p1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_28)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((ap_const_lv1_0 = exitcond6_fu_385_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond5_fu_370_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and (ap_const_lv1_0 = exitcond6_fu_385_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond5_fu_370_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((ap_const_lv1_0 = exitcond6_fu_385_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond5_fu_370_p2))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) and not((ap_const_lv1_0 = exitcond_fu_477_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_26) and not((p_dst_data_stream_V_full_n = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) and (ap_const_lv1_0 = exitcond_fu_477_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_26) and not((p_dst_data_stream_V_full_n = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) and not((ap_const_lv1_0 = exitcond_fu_477_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it10 assign process. --
    ap_reg_ppiten_pp1_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it10 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it10 <= ap_reg_ppiten_pp1_it9;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it11 assign process. --
    ap_reg_ppiten_pp1_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it11 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it11 <= ap_reg_ppiten_pp1_it10;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it12 assign process. --
    ap_reg_ppiten_pp1_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it12 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it12 <= ap_reg_ppiten_pp1_it11;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it13 assign process. --
    ap_reg_ppiten_pp1_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it13 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it13 <= ap_reg_ppiten_pp1_it12;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it14 assign process. --
    ap_reg_ppiten_pp1_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it14 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it14 <= ap_reg_ppiten_pp1_it13;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it15 assign process. --
    ap_reg_ppiten_pp1_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it15 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it15 <= ap_reg_ppiten_pp1_it14;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it16 assign process. --
    ap_reg_ppiten_pp1_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it16 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it16 <= ap_reg_ppiten_pp1_it15;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it3 assign process. --
    ap_reg_ppiten_pp1_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it4 assign process. --
    ap_reg_ppiten_pp1_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it4 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it4 <= ap_reg_ppiten_pp1_it3;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it5 assign process. --
    ap_reg_ppiten_pp1_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it5 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it5 <= ap_reg_ppiten_pp1_it4;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it6 assign process. --
    ap_reg_ppiten_pp1_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it6 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it6 <= ap_reg_ppiten_pp1_it5;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it7 assign process. --
    ap_reg_ppiten_pp1_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it7 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it7 <= ap_reg_ppiten_pp1_it6;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it8 assign process. --
    ap_reg_ppiten_pp1_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it8 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it8 <= ap_reg_ppiten_pp1_it7;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it9 assign process. --
    ap_reg_ppiten_pp1_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it9 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp1_it9 <= ap_reg_ppiten_pp1_it8;
            end if;
        end if;
    end process;


    -- i2_reg_258 assign process. --
    i2_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_4)) then 
                i2_reg_258 <= i_4_reg_1263;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond4_fu_342_p2 = ap_const_lv1_0)))) then 
                i2_reg_258 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- i3_reg_302 assign process. --
    i3_reg_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_fu_477_p2))) then 
                i3_reg_302 <= i_3_fu_483_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_26) and not((p_dst_data_stream_V_full_n = ap_const_logic_0)))) then 
                i3_reg_302 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    -- i_reg_247 assign process. --
    i_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_fu_342_p2 = ap_const_lv1_0))) then 
                i_reg_247 <= i_2_fu_348_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_88))) then 
                i_reg_247 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    -- j_reg_270 assign process. --
    j_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and (ap_const_lv1_0 = exitcond6_fu_385_p2))) then 
                j_reg_270 <= j_2_fu_390_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond5_fu_370_p2))) then 
                j_reg_270 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- p_5_reg_290 assign process. --
    p_5_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it1))) then 
                p_5_reg_290 <= sum_V_reg_1341;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_26) and not((p_dst_data_stream_V_full_n = ap_const_logic_0)))) then 
                p_5_reg_290 <= ap_const_lv21_0;
            end if; 
        end if;
    end process;

    -- tmp_16_fu_136 assign process. --
    tmp_16_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then 
                tmp_16_fu_136 <= tmp_37_reg_1286;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond4_fu_342_p2 = ap_const_lv1_0)))) then 
                tmp_16_fu_136 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it11)) then
                F2_reg_1396 <= F2_fu_587_p2;
                isneg_reg_1370 <= ireg_V_fu_529_p1(63 downto 63);
                man_V_1_reg_1385 <= man_V_1_fu_575_p2;
                p_Result_s_reg_1380(0) <= p_Result_s_fu_571_p1(0);
    p_Result_s_reg_1380(1) <= p_Result_s_fu_571_p1(1);
    p_Result_s_reg_1380(2) <= p_Result_s_fu_571_p1(2);
    p_Result_s_reg_1380(3) <= p_Result_s_fu_571_p1(3);
    p_Result_s_reg_1380(4) <= p_Result_s_fu_571_p1(4);
    p_Result_s_reg_1380(5) <= p_Result_s_fu_571_p1(5);
    p_Result_s_reg_1380(6) <= p_Result_s_fu_571_p1(6);
    p_Result_s_reg_1380(7) <= p_Result_s_fu_571_p1(7);
    p_Result_s_reg_1380(8) <= p_Result_s_fu_571_p1(8);
    p_Result_s_reg_1380(9) <= p_Result_s_fu_571_p1(9);
    p_Result_s_reg_1380(10) <= p_Result_s_fu_571_p1(10);
    p_Result_s_reg_1380(11) <= p_Result_s_fu_571_p1(11);
    p_Result_s_reg_1380(12) <= p_Result_s_fu_571_p1(12);
    p_Result_s_reg_1380(13) <= p_Result_s_fu_571_p1(13);
    p_Result_s_reg_1380(14) <= p_Result_s_fu_571_p1(14);
    p_Result_s_reg_1380(15) <= p_Result_s_fu_571_p1(15);
    p_Result_s_reg_1380(16) <= p_Result_s_fu_571_p1(16);
    p_Result_s_reg_1380(17) <= p_Result_s_fu_571_p1(17);
    p_Result_s_reg_1380(18) <= p_Result_s_fu_571_p1(18);
    p_Result_s_reg_1380(19) <= p_Result_s_fu_571_p1(19);
    p_Result_s_reg_1380(20) <= p_Result_s_fu_571_p1(20);
    p_Result_s_reg_1380(21) <= p_Result_s_fu_571_p1(21);
    p_Result_s_reg_1380(22) <= p_Result_s_fu_571_p1(22);
    p_Result_s_reg_1380(23) <= p_Result_s_fu_571_p1(23);
    p_Result_s_reg_1380(24) <= p_Result_s_fu_571_p1(24);
    p_Result_s_reg_1380(25) <= p_Result_s_fu_571_p1(25);
    p_Result_s_reg_1380(26) <= p_Result_s_fu_571_p1(26);
    p_Result_s_reg_1380(27) <= p_Result_s_fu_571_p1(27);
    p_Result_s_reg_1380(28) <= p_Result_s_fu_571_p1(28);
    p_Result_s_reg_1380(29) <= p_Result_s_fu_571_p1(29);
    p_Result_s_reg_1380(30) <= p_Result_s_fu_571_p1(30);
    p_Result_s_reg_1380(31) <= p_Result_s_fu_571_p1(31);
    p_Result_s_reg_1380(32) <= p_Result_s_fu_571_p1(32);
    p_Result_s_reg_1380(33) <= p_Result_s_fu_571_p1(33);
    p_Result_s_reg_1380(34) <= p_Result_s_fu_571_p1(34);
    p_Result_s_reg_1380(35) <= p_Result_s_fu_571_p1(35);
    p_Result_s_reg_1380(36) <= p_Result_s_fu_571_p1(36);
    p_Result_s_reg_1380(37) <= p_Result_s_fu_571_p1(37);
    p_Result_s_reg_1380(38) <= p_Result_s_fu_571_p1(38);
    p_Result_s_reg_1380(39) <= p_Result_s_fu_571_p1(39);
    p_Result_s_reg_1380(40) <= p_Result_s_fu_571_p1(40);
    p_Result_s_reg_1380(41) <= p_Result_s_fu_571_p1(41);
    p_Result_s_reg_1380(42) <= p_Result_s_fu_571_p1(42);
    p_Result_s_reg_1380(43) <= p_Result_s_fu_571_p1(43);
    p_Result_s_reg_1380(44) <= p_Result_s_fu_571_p1(44);
    p_Result_s_reg_1380(45) <= p_Result_s_fu_571_p1(45);
    p_Result_s_reg_1380(46) <= p_Result_s_fu_571_p1(46);
    p_Result_s_reg_1380(47) <= p_Result_s_fu_571_p1(47);
    p_Result_s_reg_1380(48) <= p_Result_s_fu_571_p1(48);
    p_Result_s_reg_1380(49) <= p_Result_s_fu_571_p1(49);
    p_Result_s_reg_1380(50) <= p_Result_s_fu_571_p1(50);
    p_Result_s_reg_1380(51) <= p_Result_s_fu_571_p1(51);
                tmp_23_reg_1406 <= tmp_23_fu_593_p1;
                tmp_4_i_reg_1390 <= tmp_4_i_fu_581_p2;
                tmp_8_i_reg_1411 <= tmp_8_i_fu_597_p2;
                tmp_i_i_33_reg_1364 <= tmp_i_i_33_fu_523_p2;
                tmp_i_i_reg_1358 <= tmp_i_i_fu_517_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it13)) then
                Range1_all_ones_2_i_i_34_reg_1530 <= Range1_all_ones_2_i_i_34_fu_1102_p2;
                p_97_demorgan_i_i_reg_1545 <= p_97_demorgan_i_i_fu_1133_p2;
                p_Val2_10_reg_1524 <= p_Val2_10_fu_989_p3;
                sel_tmp46_i_reg_1535 <= sel_tmp46_i_fu_1119_p2;
                sel_tmp47_i_reg_1540 <= sel_tmp47_i_fu_1124_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it12)) then
                Range1_all_zeros_1_reg_1503 <= Range1_all_zeros_1_fu_878_p2;
                Range2_all_ones_reg_1493 <= Range2_all_ones_fu_860_p2;
                icmp_reg_1418 <= icmp_fu_657_p2;
                p_Val2_8_reg_1429 <= p_Val2_8_fu_698_p3;
                qb_reg_1434 <= qb_fu_728_p3;
                rev1_reg_1481 <= rev1_fu_832_p2;
                rev_reg_1469 <= rev_fu_798_p2;
                sel_tmp12_demorgan_i_reg_1456 <= sel_tmp12_demorgan_i_fu_761_p2;
                sel_tmp2_i_reg_1450 <= sel_tmp2_i_fu_755_p2;
                sel_tmp34_i_reg_1508 <= sel_tmp34_i_fu_896_p2;
                sel_tmp55_demorgan_i_reg_1519 <= sel_tmp55_demorgan_i_fu_923_p2;
                sel_tmp_i_reg_1445 <= sel_tmp_i_fu_743_p3;
                tmp3_reg_1476 <= tmp3_fu_818_p2;
                tmp_19_i_reg_1462 <= tmp_19_i_fu_784_p2;
                tmp_24_i_reg_1487 <= tmp_24_i_fu_838_p2;
                tmp_26_i_reg_1498 <= tmp_26_i_fu_866_p2;
                tmp_27_reg_1424 <= tmp_27_fu_694_p1;
                tmp_29_reg_1439 <= p_Val2_8_fu_698_p3(7 downto 7);
                tmp_7_reg_1514 <= tmp_7_fu_917_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                ap_reg_ppstg_exitcond6_reg_1273_pp0_it1 <= exitcond6_reg_1273;
                ap_reg_ppstg_tmp_10_reg_1282_pp0_it1 <= tmp_10_reg_1282;
                exitcond6_reg_1273 <= exitcond6_fu_385_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27)) then
                ap_reg_ppstg_exitcond_reg_1322_pp1_it1 <= exitcond_reg_1322;
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(0) <= tmp_5_reg_1331(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(1) <= tmp_5_reg_1331(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(2) <= tmp_5_reg_1331(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(3) <= tmp_5_reg_1331(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(4) <= tmp_5_reg_1331(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(5) <= tmp_5_reg_1331(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(6) <= tmp_5_reg_1331(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(7) <= tmp_5_reg_1331(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(8) <= tmp_5_reg_1331(8);
                exitcond_reg_1322 <= exitcond_fu_477_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_true = ap_true)) then
                ap_reg_ppstg_exitcond_reg_1322_pp1_it10 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it9;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it11 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it10;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it12 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it11;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it13 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it12;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it14 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it13;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it15 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it14;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it2 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it1;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it3 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it2;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it4 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it3;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it5 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it4;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it6 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it5;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it7 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it6;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it8 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it7;
                ap_reg_ppstg_exitcond_reg_1322_pp1_it9 <= ap_reg_ppstg_exitcond_reg_1322_pp1_it8;
                ap_reg_ppstg_isneg_reg_1370_pp1_it13 <= isneg_reg_1370;
                ap_reg_ppstg_sel_tmp55_demorgan_i_reg_1519_pp1_it14 <= sel_tmp55_demorgan_i_reg_1519;
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(8);
                ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(0) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(0);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(1) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(1);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(2) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(2);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(3) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(3);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(4) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(4);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(5) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(5);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(6) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(6);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(7) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(7);
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(8) <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(8);
                ap_reg_ppstg_tmp_7_reg_1514_pp1_it14 <= tmp_7_reg_1514;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond4_fu_342_p2 = ap_const_lv1_0)))) then
                cols_cast7_reg_1249(0) <= cols_cast7_fu_359_p1(0);
    cols_cast7_reg_1249(1) <= cols_cast7_fu_359_p1(1);
    cols_cast7_reg_1249(2) <= cols_cast7_fu_359_p1(2);
    cols_cast7_reg_1249(3) <= cols_cast7_fu_359_p1(3);
    cols_cast7_reg_1249(4) <= cols_cast7_fu_359_p1(4);
    cols_cast7_reg_1249(5) <= cols_cast7_fu_359_p1(5);
    cols_cast7_reg_1249(6) <= cols_cast7_fu_359_p1(6);
    cols_cast7_reg_1249(7) <= cols_cast7_fu_359_p1(7);
    cols_cast7_reg_1249(8) <= cols_cast7_fu_359_p1(8);
    cols_cast7_reg_1249(9) <= cols_cast7_fu_359_p1(9);
    cols_cast7_reg_1249(10) <= cols_cast7_fu_359_p1(10);
    cols_cast7_reg_1249(11) <= cols_cast7_fu_359_p1(11);
                rows_cast6_reg_1254(0) <= rows_cast6_fu_362_p1(0);
    rows_cast6_reg_1254(1) <= rows_cast6_fu_362_p1(1);
    rows_cast6_reg_1254(2) <= rows_cast6_fu_362_p1(2);
    rows_cast6_reg_1254(3) <= rows_cast6_fu_362_p1(3);
    rows_cast6_reg_1254(4) <= rows_cast6_fu_362_p1(4);
    rows_cast6_reg_1254(5) <= rows_cast6_fu_362_p1(5);
    rows_cast6_reg_1254(6) <= rows_cast6_fu_362_p1(6);
    rows_cast6_reg_1254(7) <= rows_cast6_fu_362_p1(7);
    rows_cast6_reg_1254(8) <= rows_cast6_fu_362_p1(8);
    rows_cast6_reg_1254(9) <= rows_cast6_fu_362_p1(9);
    rows_cast6_reg_1254(10) <= rows_cast6_fu_362_p1(10);
    rows_cast6_reg_1254(11) <= rows_cast6_fu_362_p1(11);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                data_0_V_4_fu_140 <= data_0_V_7_phi_fu_284_p4;
                data_0_V_5_fu_144 <= data_0_V_7_phi_fu_284_p4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_4_reg_1263 <= i_4_fu_375_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_26) and not((p_dst_data_stream_V_full_n = ap_const_logic_0)))) then
                scale_reg_1317 <= grp_fu_318_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_reg_1322))) then
                sum_V_reg_1341 <= sum_V_fu_494_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and (ap_const_lv1_0 = exitcond6_fu_385_p2))) then
                tmp_10_reg_1282 <= tmp_10_fu_402_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond5_fu_370_p2)))) then
                tmp_1_reg_1268 <= tmp_1_fu_381_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_10)) then
                tmp_2_reg_1307 <= grp_fu_326_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_lv1_0 = exitcond6_reg_1273) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then
                tmp_37_reg_1286 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) and (ap_const_lv1_0 = exitcond_fu_477_p2))) then
                tmp_5_reg_1331(0) <= tmp_5_fu_489_p1(0);
    tmp_5_reg_1331(1) <= tmp_5_fu_489_p1(1);
    tmp_5_reg_1331(2) <= tmp_5_fu_489_p1(2);
    tmp_5_reg_1331(3) <= tmp_5_fu_489_p1(3);
    tmp_5_reg_1331(4) <= tmp_5_fu_489_p1(4);
    tmp_5_reg_1331(5) <= tmp_5_fu_489_p1(5);
    tmp_5_reg_1331(6) <= tmp_5_fu_489_p1(6);
    tmp_5_reg_1331(7) <= tmp_5_fu_489_p1(7);
    tmp_5_reg_1331(8) <= tmp_5_fu_489_p1(8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it6)) then
                tmp_6_reg_1347 <= grp_fu_323_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it10)) then
                v_assign_reg_1352 <= grp_fu_314_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it14)) then
                val_V_reg_1551 <= val_V_fu_1202_p3;
            end if;
        end if;
    end process;
    cols_cast7_reg_1249(23 downto 12) <= "000000000000";
    rows_cast6_reg_1254(23 downto 12) <= "000000000000";
    tmp_5_reg_1331(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it1(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it2(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it3(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it4(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it5(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it6(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it7(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it8(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it9(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it10(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it11(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it12(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it13(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it14(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    p_Result_s_reg_1380(53 downto 52) <= "01";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, p_dst_data_stream_V_full_n, ap_sig_bdd_88, exitcond4_fu_342_p2, exitcond5_fu_370_p2, exitcond6_fu_385_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_141, ap_reg_ppiten_pp0_it1, ap_sig_bdd_153, ap_reg_ppiten_pp0_it2, exitcond_fu_477_p2, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it15, ap_reg_ppiten_pp1_it16)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_88)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond4_fu_342_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = exitcond5_fu_370_p2)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_5;
                end if;
            when ap_ST_pp0_stg0_fsm_3 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((ap_const_lv1_0 = exitcond6_fu_385_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not((ap_const_lv1_0 = exitcond6_fu_385_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                end if;
            when ap_ST_st7_fsm_4 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st8_fsm_5 => 
                ap_NS_fsm <= ap_ST_st9_fsm_6;
            when ap_ST_st9_fsm_6 => 
                ap_NS_fsm <= ap_ST_st10_fsm_7;
            when ap_ST_st10_fsm_7 => 
                ap_NS_fsm <= ap_ST_st11_fsm_8;
            when ap_ST_st11_fsm_8 => 
                ap_NS_fsm <= ap_ST_st12_fsm_9;
            when ap_ST_st12_fsm_9 => 
                ap_NS_fsm <= ap_ST_st13_fsm_10;
            when ap_ST_st13_fsm_10 => 
                ap_NS_fsm <= ap_ST_st14_fsm_11;
            when ap_ST_st14_fsm_11 => 
                ap_NS_fsm <= ap_ST_st15_fsm_12;
            when ap_ST_st15_fsm_12 => 
                ap_NS_fsm <= ap_ST_st16_fsm_13;
            when ap_ST_st16_fsm_13 => 
                ap_NS_fsm <= ap_ST_st17_fsm_14;
            when ap_ST_st17_fsm_14 => 
                ap_NS_fsm <= ap_ST_st18_fsm_15;
            when ap_ST_st18_fsm_15 => 
                ap_NS_fsm <= ap_ST_st19_fsm_16;
            when ap_ST_st19_fsm_16 => 
                ap_NS_fsm <= ap_ST_st20_fsm_17;
            when ap_ST_st20_fsm_17 => 
                ap_NS_fsm <= ap_ST_st21_fsm_18;
            when ap_ST_st21_fsm_18 => 
                ap_NS_fsm <= ap_ST_st22_fsm_19;
            when ap_ST_st22_fsm_19 => 
                ap_NS_fsm <= ap_ST_st23_fsm_20;
            when ap_ST_st23_fsm_20 => 
                ap_NS_fsm <= ap_ST_st24_fsm_21;
            when ap_ST_st24_fsm_21 => 
                ap_NS_fsm <= ap_ST_st25_fsm_22;
            when ap_ST_st25_fsm_22 => 
                ap_NS_fsm <= ap_ST_st26_fsm_23;
            when ap_ST_st26_fsm_23 => 
                ap_NS_fsm <= ap_ST_st27_fsm_24;
            when ap_ST_st27_fsm_24 => 
                ap_NS_fsm <= ap_ST_st28_fsm_25;
            when ap_ST_st28_fsm_25 => 
                ap_NS_fsm <= ap_ST_st29_fsm_26;
            when ap_ST_st29_fsm_26 => 
                if (not((p_dst_data_stream_V_full_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_27;
                else
                    ap_NS_fsm <= ap_ST_st29_fsm_26;
                end if;
            when ap_ST_pp1_stg0_fsm_27 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it15)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = exitcond_fu_477_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_27;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = exitcond_fu_477_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) then
                    ap_NS_fsm <= ap_ST_st47_fsm_28;
                else
                    ap_NS_fsm <= ap_ST_st47_fsm_28;
                end if;
            when ap_ST_st47_fsm_28 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
        F2_2_cast3_i_fu_629_p1 <= std_logic_vector(resize(signed(F2_2_fu_622_p3),15));

        F2_2_cast_i_fu_633_p1 <= std_logic_vector(resize(signed(F2_2_fu_622_p3),32));

    F2_2_fu_622_p3 <= 
        F2_reg_1396 when (tmp_6_i_fu_612_p2(0) = '1') else 
        tmp_7_i_fu_617_p2;
    F2_fu_587_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_1_i_fu_555_p1));
    Range1_all_ones_1_fu_1026_p2 <= (tmp3_reg_1476 and tmp_19_i_reg_1462);
    Range1_all_ones_2_i_i_34_fu_1102_p2 <= (carry_1_i_i_fu_1012_p2 and Range1_all_ones_2_i_i_fu_1071_p3);
    Range1_all_ones_2_i_i_fu_1071_p3 <= 
        Range1_all_ones_fu_1044_p2 when (or_cond93_i_i_fu_1040_p2(0) = '1') else 
        sel_tmp35_i_fu_1065_p3;
    Range1_all_ones_fu_1044_p2 <= (Range2_all_ones_1_i_i_fu_1034_p3 and Range1_all_ones_1_fu_1026_p2);
    Range1_all_zeros_1_fu_878_p2 <= "1" when (p_Val2_s_fu_607_p3 = ap_const_lv54_0) else "0";
    Range1_all_zeros_2_i_i_fu_1086_p3 <= 
        p_98_i_i_fu_1056_p2 when (or_cond93_i_i_fu_1040_p2(0) = '1') else 
        sel_tmp39_i_fu_1079_p3;
    Range1_all_zeros_fu_1050_p2 <= (Range1_all_ones_1_fu_1026_p2 xor ap_const_lv1_1);
    Range2_V_1_fu_848_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_s_fu_607_p3),to_integer(unsigned('0' & tmp_25_i_fu_844_p1(31-1 downto 0)))));
    Range2_all_ones_1_i_i_fu_1034_p3 <= 
        Range2_all_ones_reg_1493 when (or_cond91_i_i_fu_1030_p2(0) = '1') else 
        rev1_reg_1481;
    Range2_all_ones_fu_860_p2 <= "1" when (Range2_V_1_fu_848_p2 = r_V_fu_854_p2) else "0";

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st47_fsm_28)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_28))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st47_fsm_28)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_28)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2 <= "XXXXXXXXXXXXXXXXXXXXX";

    -- ap_sig_bdd_100 assign process. --
    ap_sig_bdd_100_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_100 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_1039 assign process. --
    ap_sig_bdd_1039_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1039 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_1046 assign process. --
    ap_sig_bdd_1046_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1046 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_1054 assign process. --
    ap_sig_bdd_1054_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1054 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_1062 assign process. --
    ap_sig_bdd_1062_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1062 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_118 assign process. --
    ap_sig_bdd_118_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_118 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_1298 assign process. --
    ap_sig_bdd_1298_assign_proc : process(ap_reg_ppstg_exitcond6_reg_1273_pp0_it1, ap_reg_ppiten_pp0_it2)
    begin
                ap_sig_bdd_1298 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2));
    end process;


    -- ap_sig_bdd_134 assign process. --
    ap_sig_bdd_134_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_134 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_141 assign process. --
    ap_sig_bdd_141_assign_proc : process(p_src_data_stream_V_empty_n, exitcond6_reg_1273)
    begin
                ap_sig_bdd_141 <= ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = exitcond6_reg_1273));
    end process;


    -- ap_sig_bdd_153 assign process. --
    ap_sig_bdd_153_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_exitcond6_reg_1273_pp0_it1, ap_reg_ppstg_tmp_10_reg_1282_pp0_it1)
    begin
                ap_sig_bdd_153 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_10_reg_1282_pp0_it1));
    end process;


    -- ap_sig_bdd_186 assign process. --
    ap_sig_bdd_186_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_186 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_195 assign process. --
    ap_sig_bdd_195_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_195 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_204 assign process. --
    ap_sig_bdd_204_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_204 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_213 assign process. --
    ap_sig_bdd_213_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_213 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    -- ap_sig_bdd_224 assign process. --
    ap_sig_bdd_224_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_224 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    -- ap_sig_bdd_433 assign process. --
    ap_sig_bdd_433_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_433 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_48 assign process. --
    ap_sig_bdd_48_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_48 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_498 assign process. --
    ap_sig_bdd_498_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_498 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    -- ap_sig_bdd_517 assign process. --
    ap_sig_bdd_517_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_517 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_88 assign process. --
    ap_sig_bdd_88_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_88 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_3 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_3_assign_proc : process(ap_sig_bdd_134)
    begin
        if (ap_sig_bdd_134) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_27 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_27_assign_proc : process(ap_sig_bdd_224)
    begin
        if (ap_sig_bdd_224) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st10_fsm_7 assign process. --
    ap_sig_cseq_ST_st10_fsm_7_assign_proc : process(ap_sig_bdd_1046)
    begin
        if (ap_sig_bdd_1046) then 
            ap_sig_cseq_ST_st10_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_8 assign process. --
    ap_sig_cseq_ST_st11_fsm_8_assign_proc : process(ap_sig_bdd_1054)
    begin
        if (ap_sig_bdd_1054) then 
            ap_sig_cseq_ST_st11_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_9 assign process. --
    ap_sig_cseq_ST_st12_fsm_9_assign_proc : process(ap_sig_bdd_1062)
    begin
        if (ap_sig_bdd_1062) then 
            ap_sig_cseq_ST_st12_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st13_fsm_10 assign process. --
    ap_sig_cseq_ST_st13_fsm_10_assign_proc : process(ap_sig_bdd_195)
    begin
        if (ap_sig_bdd_195) then 
            ap_sig_cseq_ST_st13_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_11 assign process. --
    ap_sig_cseq_ST_st14_fsm_11_assign_proc : process(ap_sig_bdd_517)
    begin
        if (ap_sig_bdd_517) then 
            ap_sig_cseq_ST_st14_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_48)
    begin
        if (ap_sig_bdd_48) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st28_fsm_25 assign process. --
    ap_sig_cseq_ST_st28_fsm_25_assign_proc : process(ap_sig_bdd_204)
    begin
        if (ap_sig_bdd_204) then 
            ap_sig_cseq_ST_st28_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st28_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st29_fsm_26 assign process. --
    ap_sig_cseq_ST_st29_fsm_26_assign_proc : process(ap_sig_bdd_213)
    begin
        if (ap_sig_bdd_213) then 
            ap_sig_cseq_ST_st29_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_100)
    begin
        if (ap_sig_bdd_100) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_118)
    begin
        if (ap_sig_bdd_118) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st47_fsm_28 assign process. --
    ap_sig_cseq_ST_st47_fsm_28_assign_proc : process(ap_sig_bdd_498)
    begin
        if (ap_sig_bdd_498) then 
            ap_sig_cseq_ST_st47_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st47_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_4 assign process. --
    ap_sig_cseq_ST_st7_fsm_4_assign_proc : process(ap_sig_bdd_433)
    begin
        if (ap_sig_bdd_433) then 
            ap_sig_cseq_ST_st7_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_5 assign process. --
    ap_sig_cseq_ST_st8_fsm_5_assign_proc : process(ap_sig_bdd_186)
    begin
        if (ap_sig_bdd_186) then 
            ap_sig_cseq_ST_st8_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_6 assign process. --
    ap_sig_cseq_ST_st9_fsm_6_assign_proc : process(ap_sig_bdd_1039)
    begin
        if (ap_sig_bdd_1039) then 
            ap_sig_cseq_ST_st9_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_fu_1166_p2 <= (underflow_not_i_fu_1150_p2 or p_97_demorgan_i_not_i_fu_1161_p2);
    brmerge_i_i_not_i_fu_1156_p2 <= (p_97_demorgan_i_i_reg_1545 and underflow_not_i_fu_1150_p2);
    carry_1_i_i_fu_1012_p2 <= (tmp2_fu_1006_p2 and sel_tmp3_i_fu_950_p2);
    cols_cast7_fu_359_p1 <= std_logic_vector(resize(unsigned(p_src_cols_V_read),24));
    d_assign_fu_329_p0 <= v_assign_reg_1352;
    data_0_V_3_fu_422_p3 <= 
        grp_fu_335_p2 when (tmp_13_fu_417_p2(0) = '1') else 
        hist_out_V_q0;

    -- data_0_V_7_phi_fu_284_p4 assign process. --
    data_0_V_7_phi_fu_284_p4_assign_proc : process(ap_reg_ppstg_tmp_10_reg_1282_pp0_it1, grp_fu_335_p2, ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2, data_0_V_3_fu_422_p3, ap_sig_bdd_1298)
    begin
        if (ap_sig_bdd_1298) then
            if ((ap_const_lv1_0 = ap_reg_ppstg_tmp_10_reg_1282_pp0_it1)) then 
                data_0_V_7_phi_fu_284_p4 <= data_0_V_3_fu_422_p3;
            elsif (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_10_reg_1282_pp0_it1))) then 
                data_0_V_7_phi_fu_284_p4 <= grp_fu_335_p2;
            else 
                data_0_V_7_phi_fu_284_p4 <= ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2;
            end if;
        else 
            data_0_V_7_phi_fu_284_p4 <= ap_reg_phiprechg_data_0_V_7_reg_281pp0_it2;
        end if; 
    end process;

    deleted_zeros_fu_1094_p3 <= 
        Range1_all_ones_2_i_i_fu_1071_p3 when (carry_1_i_i_fu_1012_p2(0) = '1') else 
        Range1_all_zeros_2_i_i_fu_1086_p3;
    exitcond4_fu_342_p2 <= "1" when (i_reg_247 = ap_const_lv9_100) else "0";
    exitcond5_fu_370_p2 <= "1" when (i2_reg_258 = p_src_rows_V_read) else "0";
    exitcond6_fu_385_p2 <= "1" when (j_reg_270 = p_src_cols_V_read) else "0";
    exitcond_fu_477_p2 <= "1" when (i3_reg_302 = ap_const_lv9_100) else "0";
    exp_tmp_V_fu_545_p4 <= ireg_V_fu_529_p1(62 downto 52);
    grp_fu_314_ce <= ap_const_logic_1;
    grp_fu_314_p0 <= tmp_6_reg_1347;
    grp_fu_314_p1 <= scale_reg_1317;

    -- grp_fu_318_ce assign process. --
    grp_fu_318_ce_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, p_dst_data_stream_V_full_n, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_sig_cseq_ST_st8_fsm_5, ap_sig_cseq_ST_st13_fsm_10, ap_sig_cseq_ST_st29_fsm_26, ap_sig_cseq_ST_pp1_stg0_fsm_27, ap_sig_cseq_ST_st7_fsm_4, ap_sig_cseq_ST_st47_fsm_28, ap_sig_cseq_ST_st9_fsm_6, ap_sig_cseq_ST_st10_fsm_7, ap_sig_cseq_ST_st11_fsm_8, ap_sig_cseq_ST_st12_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_28) or ((p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_26)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_9))) then 
            grp_fu_318_ce <= ap_const_logic_0;
        else 
            grp_fu_318_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_318_p0 <= ap_const_lv32_437F0000;
    grp_fu_318_p1 <= tmp_2_reg_1307;
    grp_fu_323_ce <= ap_const_logic_1;
    grp_fu_323_p0 <= sum_V_reg_1341;
    grp_fu_326_ce <= ap_const_logic_1;
    grp_fu_326_p0 <= std_logic_vector(resize(unsigned(tmp_1_reg_1268),32));
    grp_fu_335_p2 <= std_logic_vector(unsigned(hist_out_V_q0) + unsigned(ap_const_lv21_1));

    -- hist_out_V_address0 assign process. --
    hist_out_V_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp1_stg0_fsm_27, ap_reg_ppiten_pp1_it0, tmp_5_fu_489_p1, tmp_fu_354_p1, tmp_11_fu_408_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            hist_out_V_address0 <= tmp_fu_354_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            hist_out_V_address0 <= tmp_5_fu_489_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            hist_out_V_address0 <= tmp_11_fu_408_p1(8 - 1 downto 0);
        else 
            hist_out_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- hist_out_V_address1 assign process. --
    hist_out_V_address1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st28_fsm_25, tmp_14_fu_431_p1, tmp_s_fu_464_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_25)) then 
            hist_out_V_address1 <= tmp_s_fu_464_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            hist_out_V_address1 <= tmp_14_fu_431_p1(8 - 1 downto 0);
        else 
            hist_out_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    -- hist_out_V_ce0 assign process. --
    hist_out_V_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_sig_bdd_141, ap_reg_ppiten_pp0_it1, ap_sig_bdd_153, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg0_fsm_27, ap_reg_ppiten_pp1_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_27) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))))) then 
            hist_out_V_ce0 <= ap_const_logic_1;
        else 
            hist_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- hist_out_V_ce1 assign process. --
    hist_out_V_ce1_assign_proc : process(ap_sig_bdd_141, ap_reg_ppiten_pp0_it1, ap_sig_bdd_153, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st28_fsm_25)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_25) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))))) then 
            hist_out_V_ce1 <= ap_const_logic_1;
        else 
            hist_out_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hist_out_V_d0 <= ap_const_lv21_0;

    -- hist_out_V_d1 assign process. --
    hist_out_V_d1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st28_fsm_25, p_2_fu_436_p2, p_s_fu_470_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_25)) then 
            hist_out_V_d1 <= p_s_fu_470_p2;
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            hist_out_V_d1 <= p_2_fu_436_p2;
        else 
            hist_out_V_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- hist_out_V_we0 assign process. --
    hist_out_V_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond4_fu_342_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_fu_342_p2 = ap_const_lv1_0)))) then 
            hist_out_V_we0 <= ap_const_logic_1;
        else 
            hist_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- hist_out_V_we1 assign process. --
    hist_out_V_we1_assign_proc : process(ap_sig_bdd_141, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond6_reg_1273_pp0_it1, ap_reg_ppstg_tmp_10_reg_1282_pp0_it1, ap_sig_bdd_153, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st28_fsm_25)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_25) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_10_reg_1282_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))))) then 
            hist_out_V_we1 <= ap_const_logic_1;
        else 
            hist_out_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- hls_lut_V_address0 assign process. --
    hls_lut_V_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st28_fsm_25, ap_reg_ppiten_pp1_it16, ap_reg_ppstg_tmp_5_reg_1331_pp1_it15, tmp_11_fu_408_p1, tmp_s_fu_464_p1, ap_sig_cseq_ST_st47_fsm_28)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_28)) then 
            hls_lut_V_address0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            hls_lut_V_address0 <= ap_reg_ppstg_tmp_5_reg_1331_pp1_it15(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_25)) then 
            hls_lut_V_address0 <= tmp_s_fu_464_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            hls_lut_V_address0 <= tmp_11_fu_408_p1(8 - 1 downto 0);
        else 
            hls_lut_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- hls_lut_V_ce0 assign process. --
    hls_lut_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_sig_bdd_141, ap_reg_ppiten_pp0_it1, ap_sig_bdd_153, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st28_fsm_25, ap_reg_ppiten_pp1_it16, ap_sig_cseq_ST_st47_fsm_28)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_25) or (ap_const_logic_1 = ap_reg_ppiten_pp1_it16) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) or (ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_28))) then 
            hls_lut_V_ce0 <= ap_const_logic_1;
        else 
            hls_lut_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- hls_lut_V_d0 assign process. --
    hls_lut_V_d0_assign_proc : process(ap_reg_ppiten_pp1_it16, val_V_reg_1551, ap_sig_cseq_ST_st47_fsm_28)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_28)) then 
            hls_lut_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_reg_ppiten_pp1_it16)) then 
            hls_lut_V_d0 <= val_V_reg_1551;
        else 
            hls_lut_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    -- hls_lut_V_we0 assign process. --
    hls_lut_V_we0_assign_proc : process(ap_reg_ppiten_pp1_it16, ap_reg_ppstg_exitcond_reg_1322_pp1_it15, ap_sig_cseq_ST_st47_fsm_28)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it16) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it15)) or (ap_const_logic_1 = ap_sig_cseq_ST_st47_fsm_28))) then 
            hls_lut_V_we0 <= ap_const_logic_1;
        else 
            hls_lut_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_2_fu_348_p2 <= std_logic_vector(unsigned(i_reg_247) + unsigned(ap_const_lv9_1));
    i_3_fu_483_p2 <= std_logic_vector(unsigned(i3_reg_302) + unsigned(ap_const_lv9_1));
    i_4_fu_375_p2 <= std_logic_vector(unsigned(i2_reg_258) + unsigned(ap_const_lv12_1));
    icmp_fu_657_p2 <= "1" when (tmp_25_fu_647_p4 = ap_const_lv9_0) else "0";
    ireg_V_fu_529_p1 <= d_assign_fu_329_p1;
    j_2_fu_390_p2 <= std_logic_vector(unsigned(j_reg_270) + unsigned(ap_const_lv12_1));
    lD_fu_814_p1 <= tmp_22_i_fu_808_p2(1 - 1 downto 0);
    loc_V_1_fu_513_p1 <= p_Val2_6_fu_500_p1(23 - 1 downto 0);
    loc_V_fu_503_p4 <= p_Val2_6_fu_500_p1(30 downto 23);
    man_V_1_fu_575_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_571_p1));
    newsignbit_fu_1018_p3 <= p_Val2_10_fu_989_p3(7 downto 7);
    not_sel_tmp28_i_fu_1001_p2 <= (sel_tmp12_demorgan_i_reg_1456 or tmp_5_not_i_fu_996_p2);
    or_cond91_i_i_fu_1030_p2 <= (tmp_24_i_reg_1487 and rev1_reg_1481);
    or_cond93_i_i_fu_1040_p2 <= (tmp_24_i_reg_1487 and rev_reg_1469);
    p_2_fu_436_p2 <= std_logic_vector(unsigned(data_0_V_5_fu_144) + unsigned(ap_const_lv21_1));

    -- p_5_phi_fu_294_p4 assign process. --
    p_5_phi_fu_294_p4_assign_proc : process(p_5_reg_290, ap_reg_ppiten_pp1_it2, ap_reg_ppstg_exitcond_reg_1322_pp1_it1, sum_V_reg_1341)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1322_pp1_it1))) then 
            p_5_phi_fu_294_p4 <= sum_V_reg_1341;
        else 
            p_5_phi_fu_294_p4 <= p_5_reg_290;
        end if; 
    end process;

    p_95_i_i_fu_1061_p2 <= (Range1_all_zeros_1_reg_1503 or rev_reg_1469);
    p_97_demorgan_i_i_fu_1133_p2 <= (tmp5_fu_1128_p2 or deleted_zeros_fu_1094_p3);
    p_97_demorgan_i_not_i_fu_1161_p2 <= (p_97_demorgan_i_i_reg_1545 xor ap_const_lv1_1);
    p_98_i_i_fu_1056_p2 <= (tmp_26_i_reg_1498 and Range1_all_zeros_fu_1050_p2);
    p_Result_s_fu_571_p1 <= std_logic_vector(resize(unsigned(tmp_2_i_fu_563_p3),54));
    p_Val2_10_fu_989_p3 <= 
        tmp_27_reg_1424 when (sel_tmp13_i_fu_984_p2(0) = '1') else 
        sel_tmp9_i_fu_971_p3;
    p_Val2_12_0_i_mux_i_fu_1172_p3 <= 
        p_Val2_10_reg_1524 when (brmerge_i_i_not_i_fu_1156_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Val2_6_fu_500_p1 <= v_assign_reg_1352;
    p_Val2_8_fu_698_p3 <= 
        tmp_26_fu_673_p1 when (tmp_i_fu_641_p2(0) = '1') else 
        p_i_fu_677_p3;
    p_Val2_9_fu_931_p2 <= std_logic_vector(unsigned(p_Val2_8_reg_1429) + unsigned(tmp_17_i_fu_928_p1));
    p_Val2_s_fu_607_p3 <= 
        man_V_1_reg_1385 when (isneg_reg_1370(0) = '1') else 
        p_Result_s_reg_1380;
    p_dst_data_stream_V_din <= hls_lut_V_q0;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(p_dst_data_stream_V_full_n, ap_sig_bdd_141, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond6_reg_1273_pp0_it1, ap_reg_ppstg_tmp_10_reg_1282_pp0_it1, ap_sig_bdd_153, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_st29_fsm_26)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_26) and not((p_dst_data_stream_V_full_n = ap_const_logic_0))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond6_reg_1273_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_10_reg_1282_pp0_it1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_fu_677_p3 <= 
        ap_const_lv8_FF when (isneg_reg_1370(0) = '1') else 
        ap_const_lv8_0;
    p_s_fu_470_p2 <= std_logic_vector(unsigned(data_0_V_4_fu_140) + unsigned(ap_const_lv21_1));

    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(exitcond6_reg_1273, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_sig_bdd_141, ap_reg_ppiten_pp0_it1, ap_sig_bdd_153, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_lv1_0 = exitcond6_reg_1273) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_153 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

        pos1_cast_i_fu_771_p1 <= std_logic_vector(resize(signed(pos1_fu_766_p2),32));

    pos1_fu_766_p2 <= std_logic_vector(unsigned(F2_reg_1396) + unsigned(ap_const_lv12_8));
        pos2_cast_i_fu_780_p1 <= std_logic_vector(resize(signed(pos2_fu_775_p2),32));

    pos2_fu_775_p2 <= std_logic_vector(unsigned(F2_reg_1396) + unsigned(ap_const_lv12_9));
    qb_fu_728_p3 <= 
        isneg_reg_1370 when (tmp_15_i_fu_706_p2(0) = '1') else 
        tmp_28_fu_720_p3;
    r_V_fu_854_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_25_i_fu_844_p1(31-1 downto 0)))));
    rev1_fu_832_p2 <= (tmp_34_fu_824_p3 xor ap_const_lv1_1);
    rev_fu_798_p2 <= (tmp_32_fu_790_p3 xor ap_const_lv1_1);
    rows_cast6_fu_362_p1 <= std_logic_vector(resize(unsigned(p_src_rows_V_read),24));
    sel_tmp12_demorgan_i_fu_761_p2 <= (tmp_8_i_reg_1411 or tmp_6_i_fu_612_p2);
    sel_tmp12_i_fu_979_p2 <= (sel_tmp12_demorgan_i_reg_1456 xor ap_const_lv1_1);
    sel_tmp13_i_fu_984_p2 <= (icmp_reg_1418 and sel_tmp12_i_fu_979_p2);
    sel_tmp1_i_fu_750_p2 <= (tmp_8_i_reg_1411 xor ap_const_lv1_1);
    sel_tmp2_i_fu_755_p2 <= (tmp_6_i_fu_612_p2 and sel_tmp1_i_fu_750_p2);
    sel_tmp33_i_fu_890_p2 <= (tmp_32_fu_790_p3 or tmp_24_i_not_fu_884_p2);
    sel_tmp34_i_fu_896_p2 <= (tmp_28_i_fu_872_p2 and sel_tmp33_i_fu_890_p2);
    sel_tmp35_i_fu_1065_p3 <= 
        Range1_all_ones_1_fu_1026_p2 when (sel_tmp34_i_reg_1508(0) = '1') else 
        rev_reg_1469;
    sel_tmp39_i_fu_1079_p3 <= 
        Range1_all_zeros_fu_1050_p2 when (sel_tmp34_i_reg_1508(0) = '1') else 
        p_95_i_i_fu_1061_p2;
    sel_tmp3_i_fu_950_p2 <= (sel_tmp2_i_reg_1450 and tmp_29_reg_1439);
    sel_tmp41_i_fu_1108_p2 <= (tmp_19_i_reg_1462 xor ap_const_lv1_1);
    sel_tmp46_i_fu_1119_p2 <= (tmp4_fu_1113_p2 and ap_reg_ppstg_isneg_reg_1370_pp1_it13);
    sel_tmp47_i_fu_1124_p2 <= (tmp_19_i_reg_1462 and ap_reg_ppstg_isneg_reg_1370_pp1_it13);
    sel_tmp4_i_fu_954_p3 <= 
        p_Val2_9_fu_931_p2 when (sel_tmp3_i_fu_950_p2(0) = '1') else 
        sel_tmp_i_reg_1445;
    sel_tmp50_i_demorgan_fu_902_p2 <= (tmp_i_i_reg_1358 and tmp_i_i_33_reg_1364);
    sel_tmp50_i_fu_906_p2 <= (sel_tmp50_i_demorgan_fu_902_p2 xor ap_const_lv1_1);
    sel_tmp51_i_fu_912_p2 <= (tmp_4_i_reg_1390 and sel_tmp50_i_fu_906_p2);
    sel_tmp52_i_fu_1184_p3 <= 
        ap_const_lv8_0 when (tmp_12_fu_1179_p2(0) = '1') else 
        p_Val2_10_reg_1524;
    sel_tmp55_demorgan_i_fu_923_p2 <= (tmp_demorgan_i_fu_603_p2 or tmp_4_i_reg_1390);
    sel_tmp55_i_fu_1191_p2 <= (ap_reg_ppstg_sel_tmp55_demorgan_i_reg_1519_pp1_it14 xor ap_const_lv1_1);
    sel_tmp56_i_fu_1196_p2 <= (brmerge_i_fu_1166_p2 and sel_tmp55_i_fu_1191_p2);
    sel_tmp7_i_fu_961_p2 <= (tmp_29_reg_1439 xor ap_const_lv1_1);
    sel_tmp8_i_fu_966_p2 <= (sel_tmp2_i_reg_1450 and sel_tmp7_i_fu_961_p2);
    sel_tmp9_i_fu_971_p3 <= 
        p_Val2_9_fu_931_p2 when (sel_tmp8_i_fu_966_p2(0) = '1') else 
        sel_tmp4_i_fu_954_p3;
    sel_tmp_i_fu_743_p3 <= 
        tmp_24_fu_637_p1 when (tmp_8_i_reg_1411(0) = '1') else 
        ap_const_lv8_0;
    sum_V_fu_494_p2 <= std_logic_vector(unsigned(hist_out_V_q0) + unsigned(p_5_phi_fu_294_p4));
    tmp2_fu_1006_p2 <= (not_sel_tmp28_i_fu_1001_p2 and tmp_18_i_fu_944_p2);
    tmp3_fu_818_p2 <= (lD_fu_814_p1 and rev_fu_798_p2);
    tmp4_fu_1113_p2 <= (newsignbit_fu_1018_p3 and sel_tmp41_i_fu_1108_p2);
    tmp5_fu_1128_p2 <= (ap_reg_ppstg_isneg_reg_1370_pp1_it13 or sel_tmp41_i_fu_1108_p2);
    tmp_10_fu_402_p2 <= "1" when (tmp_9_fu_396_p2 = ap_const_lv12_0) else "0";
    tmp_10_i_fu_663_p1 <= std_logic_vector(resize(unsigned(F2_2_cast_i_fu_633_p1),54));
    tmp_11_fu_408_p1 <= std_logic_vector(resize(unsigned(p_src_data_stream_V_dout),64));
    tmp_11_i_fu_667_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_fu_607_p3),to_integer(unsigned('0' & tmp_10_i_fu_663_p1(31-1 downto 0)))));
    tmp_12_fu_1179_p2 <= (ap_reg_ppstg_tmp_7_reg_1514_pp1_it14 or underflow_fu_1144_p3);
    tmp_13_fu_417_p2 <= "1" when (tmp_37_reg_1286 = tmp_16_fu_136) else "0";
    tmp_13_i_fu_688_p2 <= std_logic_vector(shift_left(unsigned(tmp_16_cast_i_fu_684_p1),to_integer(unsigned('0' & F2_2_cast3_i_fu_629_p1(15-1 downto 0)))));
    tmp_14_fu_431_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_136),64));
    tmp_15_i_fu_706_p2 <= "1" when (signed(F2_reg_1396) > signed(ap_const_lv12_36)) else "0";
    tmp_16_cast_i_fu_684_p1 <= std_logic_vector(resize(unsigned(tmp_24_fu_637_p1),15));
    tmp_16_i_fu_711_p2 <= std_logic_vector(unsigned(tmp_23_reg_1406) + unsigned(ap_const_lv11_7FF));
    tmp_17_i_fu_928_p1 <= std_logic_vector(resize(unsigned(qb_reg_1434),8));
    tmp_18_i_fu_944_p2 <= (tmp_30_fu_936_p3 xor ap_const_lv1_1);
    tmp_19_i_fu_784_p2 <= "1" when (signed(pos1_fu_766_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_1_fu_381_p0 <= rows_cast6_reg_1254(12 - 1 downto 0);
    tmp_1_fu_381_p1 <= cols_cast7_reg_1249(12 - 1 downto 0);
    tmp_1_fu_381_p2 <= std_logic_vector(resize(unsigned(tmp_1_fu_381_p0) * unsigned(tmp_1_fu_381_p1), 24));
    tmp_1_i_fu_555_p1 <= std_logic_vector(resize(unsigned(exp_tmp_V_fu_545_p4),12));
    tmp_20_cast_i_fu_716_p1 <= std_logic_vector(resize(unsigned(tmp_16_i_fu_711_p2),32));
    tmp_20_fu_533_p1 <= ireg_V_fu_529_p1(63 - 1 downto 0);
    tmp_21_i_fu_804_p1 <= std_logic_vector(resize(unsigned(pos1_cast_i_fu_771_p1),54));
    tmp_22_fu_559_p1 <= ireg_V_fu_529_p1(52 - 1 downto 0);
    tmp_22_i_fu_808_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_fu_607_p3),to_integer(unsigned('0' & tmp_21_i_fu_804_p1(31-1 downto 0)))));
    tmp_23_fu_593_p1 <= F2_fu_587_p2(11 - 1 downto 0);
    tmp_24_fu_637_p1 <= p_Val2_s_fu_607_p3(8 - 1 downto 0);
    tmp_24_i_fu_838_p2 <= "1" when (signed(pos2_fu_775_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_24_i_not_fu_884_p2 <= (tmp_24_i_fu_838_p2 xor ap_const_lv1_1);
    tmp_25_fu_647_p4 <= F2_2_fu_622_p3(11 downto 3);
    tmp_25_i_fu_844_p1 <= std_logic_vector(resize(unsigned(pos2_cast_i_fu_780_p1),54));
    tmp_26_fu_673_p1 <= tmp_11_i_fu_667_p2(8 - 1 downto 0);
    tmp_26_i_fu_866_p2 <= "1" when (Range2_V_1_fu_848_p2 = ap_const_lv54_0) else "0";
    tmp_27_fu_694_p1 <= tmp_13_i_fu_688_p2(8 - 1 downto 0);
    tmp_28_fu_720_p3 <= p_Val2_s_fu_607_p3(to_integer(unsigned(tmp_20_cast_i_fu_716_p1)) downto to_integer(unsigned(tmp_20_cast_i_fu_716_p1))) when (to_integer(unsigned(tmp_20_cast_i_fu_716_p1))>= 0 and to_integer(unsigned(tmp_20_cast_i_fu_716_p1))<=53) else "-";
    tmp_28_i_fu_872_p2 <= "1" when (pos2_fu_775_p2 = ap_const_lv12_36) else "0";
    tmp_29_i_fu_1139_p2 <= (Range1_all_ones_2_i_i_34_reg_1530 xor ap_const_lv1_1);
    tmp_2_i_fu_563_p3 <= (ap_const_lv1_1 & tmp_22_fu_559_p1);
    tmp_30_fu_936_p3 <= p_Val2_9_fu_931_p2(7 downto 7);
    tmp_32_fu_790_p3 <= pos1_fu_766_p2(11 downto 11);
    tmp_34_fu_824_p3 <= pos2_fu_775_p2(11 downto 11);
    tmp_4_i_fu_581_p2 <= "1" when (tmp_20_fu_533_p1 = ap_const_lv63_0) else "0";
    tmp_5_fu_489_p1 <= std_logic_vector(resize(unsigned(i3_reg_302),64));
    tmp_5_not_i_fu_996_p2 <= (icmp_reg_1418 xor ap_const_lv1_1);
    tmp_6_i_fu_612_p2 <= "1" when (signed(F2_reg_1396) > signed(ap_const_lv12_0)) else "0";
    tmp_7_fu_917_p2 <= (sel_tmp51_i_fu_912_p2 or tmp_demorgan_i_fu_603_p2);
    tmp_7_i_fu_617_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(F2_reg_1396));
    tmp_8_i_fu_597_p2 <= "1" when (exp_tmp_V_fu_545_p4 = ap_const_lv11_433) else "0";
    tmp_9_fu_396_p2 <= (j_reg_270 or i2_reg_258);
    tmp_demorgan_i_fu_603_p2 <= (tmp_i_i_reg_1358 and tmp_i_i_33_reg_1364);
    tmp_fu_354_p1 <= std_logic_vector(resize(unsigned(i_reg_247),64));
    tmp_i_fu_641_p2 <= "1" when (unsigned(F2_2_fu_622_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_i_i_33_fu_523_p2 <= "0" when (loc_V_1_fu_513_p1 = ap_const_lv23_0) else "1";
    tmp_i_i_fu_517_p2 <= "1" when (loc_V_fu_503_p4 = ap_const_lv8_FF) else "0";
    tmp_s_fu_464_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_136),64));
    underflow_fu_1144_p3 <= 
        tmp_29_i_fu_1139_p2 when (sel_tmp47_i_reg_1540(0) = '1') else 
        sel_tmp46_i_reg_1535;
    underflow_not_i_fu_1150_p2 <= (underflow_fu_1144_p3 xor ap_const_lv1_1);
    val_V_fu_1202_p3 <= 
        p_Val2_12_0_i_mux_i_fu_1172_p3 when (sel_tmp56_i_fu_1196_p2(0) = '1') else 
        sel_tmp52_i_fu_1184_p3;
end behav;
